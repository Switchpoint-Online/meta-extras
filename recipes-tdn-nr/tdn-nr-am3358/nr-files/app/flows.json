[
    {
        "id": "70d3ab8470d8a674",
        "type": "tab",
        "label": "TDN setup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0b0b730491f0048c",
        "type": "tab",
        "label": "Slots setup",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d4bc3e2796f33eee",
        "type": "tab",
        "label": "Telemtry",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f88f7ae578b4cf10",
        "type": "tab",
        "label": "Newton UDP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "903c95189e447cc0",
        "type": "tab",
        "label": "Kion UDP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a9950d7.bfc8c",
        "type": "subflow",
        "name": "Univu",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "2dd64ee1.2bf622"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99",
        "status": {
            "x": 760,
            "y": 80,
            "wires": [
                {
                    "id": "2fed3ddc.9915f2",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b1b4135aba266275",
        "type": "junction",
        "z": "0b0b730491f0048c",
        "x": 440,
        "y": 1100,
        "wires": [
            [
                "ee85b30a09cbcf62"
            ]
        ]
    },
    {
        "id": "bcab85064e65b5ca",
        "type": "junction",
        "z": "0b0b730491f0048c",
        "x": 320,
        "y": 260,
        "wires": [
            [
                "46c0a62804f17e2e",
                "be3b5d3c1a7c8206",
                "7691939312d7fae0",
                "653de7f5e2e813b5"
            ]
        ]
    },
    {
        "id": "e9f0384416b4ca52",
        "type": "junction",
        "z": "0b0b730491f0048c",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "17964a9820b3bbef",
                "e2e1f737452a3da4"
            ]
        ]
    },
    {
        "id": "37a0ce04ac9254ff",
        "type": "junction",
        "z": "d4bc3e2796f33eee",
        "x": 1040,
        "y": 640,
        "wires": [
            [
                "c8afd62ee8ea32d1"
            ]
        ]
    },
    {
        "id": "64be0b2ff23ee424",
        "type": "junction",
        "z": "0b0b730491f0048c",
        "x": 200,
        "y": 420,
        "wires": [
            [
                "764edec74e2a6260"
            ]
        ]
    },
    {
        "id": "a77dbe591378e83e",
        "type": "junction",
        "z": "70d3ab8470d8a674",
        "x": 500,
        "y": 640,
        "wires": [
            [
                "c4f3a0d0e6cdae94"
            ]
        ]
    },
    {
        "id": "4ae6a255c2263b1d",
        "type": "junction",
        "z": "f88f7ae578b4cf10",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "11e88e0b7750b164"
            ]
        ]
    },
    {
        "id": "5b25a16fe0be3c66",
        "type": "junction",
        "z": "903c95189e447cc0",
        "x": 580,
        "y": 180,
        "wires": [
            [
                "c07d4196bbd7db9c"
            ]
        ]
    },
    {
        "id": "796f3694.be8cf8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0056d6",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#a1c2f7",
                "baseFont": "Lucida Sans Unicode,Lucida Grande,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0056d6",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#237cff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0056d6",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "TDN Gaming System Interface",
            "hideToolbar": "true",
            "allowSwipe": "true",
            "lockMenu": "true",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "94d7b14d.94bdc",
        "type": "ui_group",
        "name": "Definitions",
        "tab": "513551d1.2dc26",
        "order": 2,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c0518aca.9c0518",
        "type": "ui_group",
        "name": "Device Setup",
        "tab": "795bfc5c.427f54",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "795bfc5c.427f54",
        "type": "ui_tab",
        "d": true,
        "name": "TDN Setup",
        "icon": "tv",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "513551d1.2dc26",
        "type": "ui_tab",
        "name": "Cameras",
        "icon": "camera",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "18e23b29.b97df5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c0518aca.9c0518",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "d1b51c347b2a10a9",
        "type": "ui_tab",
        "name": "Cathexis",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a4cb1f92e296ec88",
        "type": "ui_group",
        "name": "Server",
        "tab": "d1b51c347b2a10a9",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f041467d7ecf6c66",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "022545b271c4a662",
        "type": "ui_spacer",
        "z": "70d3ab8470d8a674",
        "name": "spacer",
        "group": "94d7b14d.94bdc",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "2dd64ee1.2bf622",
        "type": "function",
        "z": "5a9950d7.bfc8c",
        "name": "",
        "func": "msg.url='http://192.168.0.130/LAPI/V1.0/Channel/0/Media/OSD/0';\nmsg.payload='{\"AreaNum\":8,\"InfoOSD\":[{\"Index\":0,\"Enable\":1,\"InfoParam\":[{\"InfoType\":\"1\",\"Value\":\"\",\"Enable\":\"1\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":33,\"Y\":41},\"BotRight\":{\"X\":12,\"Y\":13}}},{\"Index\":1,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":75,\"Y\":3},\"BotRight\":{\"X\":85,\"Y\":13}}},{\"Index\":2,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":2,\"Y\":75},\"BotRight\":{\"X\":12,\"Y\":85}}},{\"Index\":3,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":4,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":5,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":6,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":7,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}}]}'\nreturn msg;\n\n//{\"AreaNum\":8,\"InfoOSD\":[{\"Index\":0,\"Enable\":1,\"InfoParam\":[{\"InfoType\":\"1\",\"Value\":\"01234567890123456789\",\"Enable\":\"1\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":12,\"Y\":13}}},{\"Index\":1,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":75,\"Y\":3},\"BotRight\":{\"X\":85,\"Y\":13}}},{\"Index\":2,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":2,\"Y\":75},\"BotRight\":{\"X\":12,\"Y\":85}}},{\"Index\":3,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":4,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":5,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":6,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":7,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}}]}",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "efdf9399.a8a94"
            ]
        ]
    },
    {
        "id": "efdf9399.a8a94",
        "type": "change",
        "z": "5a9950d7.bfc8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json; charset=UTF-8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "2fed3ddc.9915f2"
            ]
        ]
    },
    {
        "id": "2fed3ddc.9915f2",
        "type": "http request",
        "z": "5a9950d7.bfc8c",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "digest",
        "x": 650,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6c1202caf107bae7",
        "type": "ui_form",
        "z": "70d3ab8470d8a674",
        "name": "",
        "label": "TDN-GSI Setup",
        "group": "c0518aca.9c0518",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "IPv4 Address",
                "value": "ipaddr",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Subnet Mask",
                "value": "subnet",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Gateway",
                "value": "gateway",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "ipaddr": "",
            "subnet": "",
            "gateway": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "808e224875500ceb"
            ]
        ]
    },
    {
        "id": "f0c7baf752ba10b6",
        "type": "ui_toast",
        "z": "70d3ab8470d8a674",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 390,
        "y": 380,
        "wires": [
            [
                "75f0dc8900d99d1a"
            ]
        ]
    },
    {
        "id": "808e224875500ceb",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "",
        "func": "const regexExp = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi;\nconst regexExp1 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi;\nconst regexExp2 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi;\nmsg.ip = msg.payload\nif (msg.payload.ipaddr !== \"\"){\n        if (msg.payload.subnet !== \"\"){\n                if (msg.payload.gateway !== \"\"){\n                    if (regexExp.test(msg.payload.ipaddr) && regexExp1.test(msg.payload.subnet) && regexExp2.test(msg.payload.gateway)){\n                        var prefix = \"\"\n                        for (const element of msg.payload.subnet.split('.')) {\n                                if (Number(element) != 0) {\n                                        var i = parseInt(element).toString(2)\n                                        var b = prefix += i\n                                }\n                        }\n                        var text = \"\"\n                        for (let i = 1; i <= b.length; i++) {\n                                text += i;\n                                var total = i\n                        }\n                        var i = `\nsource /etc/network/interfaces.d/*\nauto eth0\niface eth0 inet static\naddress `+ msg.payload.ipaddr + `/` + total + `\ngateway `+ msg.payload.gateway\n\nmsg.payload = `set IP address to `+msg.payload.ipaddr+` and reboot ?`\n                    }else {msg.payload = \"Invalid IP Format\"}\n                }else {msg.payload = \"No Gateway Defined\"}\n        }else {msg.payload = \"No Subnet Defined\"}\n}else {msg.payload = \"No IP Address Defined\"}\nreturn [msg,{\"payload\":i}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 400,
        "wires": [
            [
                "f0c7baf752ba10b6"
            ],
            [
                "d916df65ac1add20"
            ]
        ]
    },
    {
        "id": "75f0dc8900d99d1a",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "",
        "func": "var timer = 3;\nif (msg.payload === \"OK\") {\n    async function delay(timeMs) {\n        await new Promise(resolve => setTimeout(resolve, timeMs));\n    }\n    let i = 3;\n    do {\n        await delay(1000);\n        node.send([null, { payload: i }, { \"payload\": { \"group\": { \"show\": [\"TDN_Setup_Countdown\"], \"hide\": [\"TDN_Setup_Device_Setup\"], \"focus\": true } } }]);\n        i--;\n    }\n    while (i >= 0);\n    node.send([{ \"payload\": \"Finished\" }, { payload: 0 }, { \"payload\": { \"group\": { \"hide\": [\"TDN_Setup_Countdown\"], \"show\": [\"TDN_Setup_Device_Setup\"] } } }]);\n}\nelse if (msg.payload === \"Cancel\") {\n    null\n}\nelse { node.error(\"No valid IP input\", msg); }",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 380,
        "wires": [
            [
                "652c350c32b80185"
            ],
            [
                "6665dc1f9b428dca"
            ],
            [
                "dcef484c179b6280"
            ]
        ]
    },
    {
        "id": "ed6a9ebc778c866b",
        "type": "ui_template",
        "z": "70d3ab8470d8a674",
        "group": "94d7b14d.94bdc",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    body {\n        background-image: url(\"abstract.jpg\");  // file path\n        background-repeat: no-repeat;\n        background-size: cover;\n        background-position: bottom left;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 80,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "93699ef48fb275b0",
        "type": "ui_media",
        "z": "70d3ab8470d8a674",
        "group": "94d7b14d.94bdc",
        "name": "Camera Logo",
        "width": "6",
        "height": "3",
        "order": 2,
        "category": "logo",
        "file": "svs.jpg",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 240,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5ffde9069b65a490",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "",
        "func": "msg.payload = global.get('ipConfig');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 520,
        "wires": [
            [
                "5bce77f6ed1810f0",
                "d20677ba57c1a705"
            ]
        ]
    },
    {
        "id": "d20677ba57c1a705",
        "type": "ui_text",
        "z": "70d3ab8470d8a674",
        "group": "c0518aca.9c0518",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "IPv4",
        "format": "{{msg.payload.ip}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 500,
        "wires": []
    },
    {
        "id": "5bce77f6ed1810f0",
        "type": "ui_text",
        "z": "70d3ab8470d8a674",
        "group": "c0518aca.9c0518",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Subnet",
        "format": "{{msg.payload.prefixlen}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 540,
        "wires": []
    },
    {
        "id": "6665dc1f9b428dca",
        "type": "ui_gauge",
        "z": "70d3ab8470d8a674",
        "name": "",
        "group": "c0518aca.9c0518",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "",
        "label": "",
        "format": "{{payload}}",
        "min": "0",
        "max": "3",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#43cb3a"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 750,
        "y": 380,
        "wires": []
    },
    {
        "id": "d916df65ac1add20",
        "type": "file",
        "z": "70d3ab8470d8a674",
        "name": "",
        "filename": "/etc/network/interfaces",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 420,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "dcef484c179b6280",
        "type": "ui_ui_control",
        "z": "70d3ab8470d8a674",
        "name": "",
        "events": "all",
        "x": 760,
        "y": 440,
        "wires": [
            [
                "2b1fd5f0a3d625e5"
            ]
        ]
    },
    {
        "id": "188bb7fe13bd4419",
        "type": "link in",
        "z": "70d3ab8470d8a674",
        "name": "link in 1",
        "links": [
            "2aed0cadca1db16f",
            "7f6d4589de5687fd",
            "7ad526609b04d013"
        ],
        "x": 595,
        "y": 500,
        "wires": [
            [
                "dcef484c179b6280"
            ]
        ]
    },
    {
        "id": "144bbe5d860de56f",
        "type": "link in",
        "z": "70d3ab8470d8a674",
        "name": "link in 4",
        "links": [
            "2b1fd5f0a3d625e5"
        ],
        "x": 95,
        "y": 520,
        "wires": [
            [
                "5ffde9069b65a490"
            ]
        ]
    },
    {
        "id": "2b1fd5f0a3d625e5",
        "type": "link out",
        "z": "70d3ab8470d8a674",
        "name": "UI Control",
        "mode": "link",
        "links": [
            "144bbe5d860de56f",
            "4ac7a2c6517e330b"
        ],
        "x": 855,
        "y": 440,
        "wires": []
    },
    {
        "id": "e79d91a157939042",
        "type": "catch",
        "z": "70d3ab8470d8a674",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 20,
        "wires": [
            [
                "d65468f3ed10d705"
            ]
        ]
    },
    {
        "id": "ce4e60cd954ae1a9",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "DRM Check",
        "func": "setTimeout(function () {\n    const hash = crypto.createHash('sha256').update(msg.payload[0].address + \"random Test Fact Salted\").digest('hex');\n    global.set('hash', hash);\n    if (global.get('SHA').includes(hash)) {\n        node.send({ successfullDRM: \"ip addr show eth0 | grep \\\"inet\\\"\" })\n    } else {\n        node.error(\"DRM Failed, Not Licenced\", msg);\n    }\n}, 1000);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "c95e5897574cf6ca",
                "feeae3a591608c90"
            ]
        ]
    },
    {
        "id": "f0d526fb003349e5",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "",
        "func": "node.send(msg)\nvar i = msg.payload.split('\\n');\nvar b = [];\nfor (const element of i) {\n  b.push(element.trim());\n}\nglobal.set('SHA',b);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4b2fd22d7560dd1d",
        "type": "file in",
        "z": "70d3ab8470d8a674",
        "name": "",
        "filename": "path",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "f0d526fb003349e5"
            ]
        ]
    },
    {
        "id": "3654bbc85fc1ab04",
        "type": "inject",
        "z": "70d3ab8470d8a674",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "path",
                "v": "/root/.node-red/.SHA",
                "vt": "str"
            },
            {
                "p": "cathexisServer",
                "v": "/root/.cathexisServer",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "ip -j addr show eth0",
        "payloadType": "str",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "12804ce9a4cba7f7",
                "4b2fd22d7560dd1d",
                "659ecfed6bcfeb61"
            ]
        ]
    },
    {
        "id": "12804ce9a4cba7f7",
        "type": "exec",
        "z": "70d3ab8470d8a674",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 220,
        "wires": [
            [
                "103520bccbb2f1bf"
            ],
            [],
            []
        ]
    },
    {
        "id": "103520bccbb2f1bf",
        "type": "json",
        "z": "70d3ab8470d8a674",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 220,
        "wires": [
            [
                "ce4e60cd954ae1a9"
            ]
        ]
    },
    {
        "id": "c95e5897574cf6ca",
        "type": "exec",
        "z": "70d3ab8470d8a674",
        "command": "",
        "addpay": "successfullDRM",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 370,
        "y": 280,
        "wires": [
            [
                "6bc9ad7c7f2c6d92"
            ],
            [],
            []
        ]
    },
    {
        "id": "6bc9ad7c7f2c6d92",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "IP Config",
        "func": "var i = msg.payload.split(\"\\n\")\nfor (const iterator of i) {\n    if (iterator.trim().split(\" \")[8] === \"eth0\") {\n        global.set(`ipConfig.ip`, iterator.trim().split(\" \")[1].split(\"/\")[0])\n        global.set(`ipConfig.prefixlen`, iterator.trim().split(\" \")[1].split(\"/\")[1])\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d65468f3ed10d705",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "function 7",
        "func": "return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 20,
        "wires": [
            [
                "82158747e816a53f"
            ]
        ]
    },
    {
        "id": "82158747e816a53f",
        "type": "debug",
        "z": "70d3ab8470d8a674",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 20,
        "wires": []
    },
    {
        "id": "652c350c32b80185",
        "type": "ui_toast",
        "z": "70d3ab8470d8a674",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 790,
        "y": 320,
        "wires": []
    },
    {
        "id": "feeae3a591608c90",
        "type": "link out",
        "z": "70d3ab8470d8a674",
        "name": "DRM Success Kickoff",
        "mode": "link",
        "links": [
            "855ac5545bfd7400"
        ],
        "x": 705,
        "y": 220,
        "wires": []
    },
    {
        "id": "e422c67f48af041c",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "",
        "func": "global.set(\"cathexisServer\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "659ecfed6bcfeb61",
        "type": "file in",
        "z": "70d3ab8470d8a674",
        "name": "",
        "filename": "cathexisServer",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 160,
        "wires": [
            [
                "e902993553ab0af8"
            ]
        ]
    },
    {
        "id": "e902993553ab0af8",
        "type": "json",
        "z": "70d3ab8470d8a674",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 160,
        "wires": [
            [
                "e422c67f48af041c"
            ]
        ]
    },
    {
        "id": "c75f8da0d7e92a02",
        "type": "udp in",
        "z": "70d3ab8470d8a674",
        "name": "",
        "iface": "",
        "port": "10010",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 80,
        "y": 680,
        "wires": [
            [
                "84a48f3fda656d13"
            ]
        ]
    },
    {
        "id": "c4f3a0d0e6cdae94",
        "type": "xml",
        "z": "70d3ab8470d8a674",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 570,
        "y": 640,
        "wires": [
            [
                "cfb0b317fb887ec4"
            ]
        ]
    },
    {
        "id": "cfb0b317fb887ec4",
        "type": "udp out",
        "z": "70d3ab8470d8a674",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "10000",
        "ipv": "udp4",
        "outport": "10010",
        "base64": false,
        "multicast": "false",
        "x": 730,
        "y": 640,
        "wires": []
    },
    {
        "id": "e3735542598ef61c",
        "type": "inject",
        "z": "70d3ab8470d8a674",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "5c9525be80cffb93"
            ]
        ]
    },
    {
        "id": "5c9525be80cffb93",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "Heartbeat",
        "func": "node.send({\n  payload: {\n    time: new Date(), counter: 0, type: \"heartbeat\"\n  }, ip: `${global.get(\"cathexisServer.ip\")}`\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 640,
        "wires": [
            [
                "a77dbe591378e83e"
            ]
        ]
    },
    {
        "id": "dbbb26b3b596631a",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "Cathexis POS REQ",
        "func": "if (msg.payload.request.type[0] === \"list_tills\"){\n    let machines = Object.entries(global.get(`machines`))\n    var i = []\n    for (const iterator of machines) {\n        i.push({\n            id: iterator[0],\n            name: iterator[0],\n            version: \"2.0\"\n        })\n    }\n    msg.payload = {\n        ack: {\n            type: \"list_tills\",\n            \"data\": ({ \"till\": i })\n        }\n    }\n    msg.ip = `${global.get(\"cathexisServer.ip\")}`\n    node.send(msg)\n}\nelse if (msg.payload.request.type[0] === \"list_cashiers\") {\nmsg.payload = {\n    ack: {\n        type: \"list_cashiers\",\n        \"data\": ({ \"cashier\": { id: \"TDN-GSI\", name: \"TDN Gaming System Interface\" } }),\n        id: \"\"\n    }\n}\nmsg.ip = `${global.get(\"cathexisServer.ip\")}`\nnode.send(msg)\n}\n\nelse if (msg.payload.request.type[0] === \"system_info\") {\n    msg.payload = {\n        ack: {\n            type: \"system_info\",\n            data: {\n                manufacturer: \"Switch Point\",\n                model: \"TDN GSI\",\n                version: 2\n            }\n        }\n    }\n    msg.ip = `${global.get(\"cathexisServer.ip\")}`\n    node.send(msg)\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 680,
        "wires": [
            [
                "a77dbe591378e83e"
            ]
        ]
    },
    {
        "id": "84a48f3fda656d13",
        "type": "xml",
        "z": "70d3ab8470d8a674",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "dbbb26b3b596631a"
            ]
        ]
    },
    {
        "id": "f60e0d47661b7775",
        "type": "link in",
        "z": "70d3ab8470d8a674",
        "name": "UDP to Cathexis",
        "links": [
            "c8afd62ee8ea32d1",
            "d220ddc3f1aac9bf",
            "c2c6d75f03e4b9c4"
        ],
        "x": 385,
        "y": 600,
        "wires": [
            [
                "a77dbe591378e83e"
            ]
        ]
    },
    {
        "id": "23c1c84e8e76fbab",
        "type": "exec",
        "z": "70d3ab8470d8a674",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 210,
        "y": 860,
        "wires": [
            [
                "f75d76158dca99f2"
            ],
            [],
            []
        ]
    },
    {
        "id": "050e6e6178a7310a",
        "type": "inject",
        "z": "70d3ab8470d8a674",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/usr/bin/vcgencmd measure_temp",
        "payloadType": "str",
        "x": 90,
        "y": 860,
        "wires": [
            [
                "23c1c84e8e76fbab"
            ]
        ]
    },
    {
        "id": "f75d76158dca99f2",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "function 14",
        "func": "var i = Number(msg.payload.split(\"=\")[1].split(\".\")[0])\nnode.send([, { value: msg.payload.split(\"=\")[1].split(\".\")[0]}])\nif(i >= 40){\n    node.send({payload:\"1\"})\n}\nelse if(i < 30){\n    node.send({ payload: \"0\" })\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 860,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4d195f85b12d6060",
        "type": "ui_ui_control",
        "z": "70d3ab8470d8a674",
        "name": "",
        "events": "connect",
        "x": 100,
        "y": 760,
        "wires": [
            [
                "04a4bd365658f2aa"
            ]
        ]
    },
    {
        "id": "d58d800fd2457e0e",
        "type": "ui_toast",
        "z": "70d3ab8470d8a674",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 470,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "04a4bd365658f2aa",
        "type": "function",
        "z": "70d3ab8470d8a674",
        "name": "function 17",
        "func": "msg.payload = `\nThe Gaming System Interface is configured through<br>\nthe Cathexis system using the naming of the cameras as follows:<br>\n<br>\n1. Cameras named in Cathexis with the word \"Slots\" in the name<br>\neg. C001 Slots A0101<br>\n<br>\n2. If a camera is monitoring multiple different banks,<br>\nthen the banks must be split with \"/\" character and no spaces<br>\neg. C001 Slots A0101/B0101<br>\n<br>\n3. If a camera is monitoring multiple different machines in a bank,<br>\n-a.  then the machines in order must be seperated by \"-\" and no spaces<br>\neg. (Bank A01 Machines 01 to 05) = C001 Slots A0101-05 <br>\neg. (Bank A01 Machines 10 to 06) = C001 Slots A0110-06 <br>\n<br>\n-b.  then the machines out of sequence must be seperated by \",\" and no spaces<br>\neg. (Bank A01 Machines 1 and 2) = C001 Slots A0101,02 <br>\neg. (Bank A01 Machines 1 and 2 and 5 to 10) = C001 Slots A0101,02,5-10 <br>\n<br>\nThe TDN-GSI will automatically get the IP and camera type from Cathexis<br>\nBosch cameras that are online will be configured innitially with,<br>\nusername = service and password = Admin123!<br>\n<br>\nSelect Read Config then edit the specific camera if this is not correct<br>\nSelect Save Config or when the TDN-GSI is rebooted any changes will be lost<br>\n<br>\n`\nmsg.topic = \"TDN-GSI Instructions\"\nreturn msg;\n\n// Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test <br>",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 740,
        "wires": [
            [
                "d58d800fd2457e0e"
            ]
        ]
    },
    {
        "id": "3f7f5afed5143a65",
        "type": "inject",
        "z": "70d3ab8470d8a674",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 940,
        "wires": [
            [
                "0f5ac38c9d98900c"
            ]
        ]
    },
    {
        "id": "0f5ac38c9d98900c",
        "type": "exec",
        "z": "70d3ab8470d8a674",
        "command": "systemctl start ssh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 290,
        "y": 940,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5ce0f387c5ff2991",
        "type": "inject",
        "z": "0b0b730491f0048c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 560,
        "wires": [
            [
                "e2e1f737452a3da4",
                "17964a9820b3bbef"
            ]
        ]
    },
    {
        "id": "e2e1f737452a3da4",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Cameras Pull",
        "func": "msg.digestUser = global.get(`cathexisServer.serverUserDigest`)\nmsg.digestPass = global.get(`cathexisServer.serverPassDigest`)\nmsg.method = \"GET\"\nmsg.url = global.get(`cathexisServer.ip`) + \":33104/cameras\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 560,
        "wires": [
            [
                "b516c8132ecfe9a5"
            ]
        ]
    },
    {
        "id": "b516c8132ecfe9a5",
        "type": "http request",
        "z": "0b0b730491f0048c",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": true,
        "headers": [],
        "x": 470,
        "y": 560,
        "wires": [
            [
                "7617cfd09e9ba2fb"
            ]
        ]
    },
    {
        "id": "165c2b260e7d14a5",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Return Cameras",
        "func": "msg.payload = msg.payload.cameras\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 620,
        "wires": [
            [
                "062365c7705f91ba"
            ]
        ]
    },
    {
        "id": "16cc2d5ca2874cf4",
        "type": "catch",
        "z": "0b0b730491f0048c",
        "name": "",
        "scope": [
            "b516c8132ecfe9a5",
            "29f0c87a9bba4577"
        ],
        "uncaught": false,
        "x": 90,
        "y": 20,
        "wires": [
            [
                "60ba7c6d0039e2e0"
            ]
        ]
    },
    {
        "id": "7617cfd09e9ba2fb",
        "type": "json",
        "z": "0b0b730491f0048c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "165c2b260e7d14a5"
            ]
        ]
    },
    {
        "id": "062365c7705f91ba",
        "type": "split",
        "z": "0b0b730491f0048c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 390,
        "y": 620,
        "wires": [
            [
                "391edad19a8d6baf",
                "eba22e6738ddddb3"
            ]
        ]
    },
    {
        "id": "391edad19a8d6baf",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Return only Slots",
        "func": "var i = msg.payload.name.split(\" \")\nif (i.includes(\"Slots\")) {\n    node.send(msg)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 760,
        "wires": [
            [
                "41259726c6c59c47"
            ]
        ]
    },
    {
        "id": "41259726c6c59c47",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Split per Layout",
        "func": "var i = msg.payload.name.split(\" \")[2]\nmsg.nameSplit = i\nif (i.split(\"/\")[1]) {\n    node.send([, , , msg])  //Multiple Banks\n}\nelse if (i.split(\",\")[1]) {\n    msg.bankNumber = i.split(\",\")[0].substring(0, 3)\n    var dualSplit = i.split(\",\")\n    for (const c of dualSplit) {\n        msg.currentSplit = c\n        if (c.split(\"-\")[1]) {\n            msg.sequenceSplit = c\n            node.send([, msg, ,])   //Not Multiple Banks\n        }\n        else {\n            node.send([, , msg,])   //Banks Split\n        }\n    }\n}\nelse if (i.split(\"-\")[1] && (!i.split(\",\")[1])) {\n    msg.bankNumber = i.split(\"-\")[0].substring(0, 3)\n    msg.sequenceSplit = i\n    node.send([, msg, ,])   //Not Multiple Banks\n}\nelse {\n    node.send([msg, , ,])   //Single Machines\n}\nconsole.log(msg)",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 840,
        "wires": [
            [
                "d9e369b5180cc7fa"
            ],
            [
                "70f8b5561b0944be"
            ],
            [
                "5e86e2ee408a50d5"
            ],
            [
                "a01ab7214f195dd2"
            ]
        ]
    },
    {
        "id": "9d476d2aaa504ad9",
        "type": "catch",
        "z": "0b0b730491f0048c",
        "name": "",
        "scope": [
            "391edad19a8d6baf",
            "eba22e6738ddddb3"
        ],
        "uncaught": false,
        "x": 90,
        "y": 60,
        "wires": [
            [
                "3bd6d6355ac25446"
            ]
        ]
    },
    {
        "id": "cc54d1261e21ce61",
        "type": "catch",
        "z": "0b0b730491f0048c",
        "name": "",
        "scope": [
            "41259726c6c59c47"
        ],
        "uncaught": false,
        "x": 90,
        "y": 100,
        "wires": [
            [
                "64afe5bf6e553e14"
            ]
        ]
    },
    {
        "id": "d9e369b5180cc7fa",
        "type": "switch",
        "z": "0b0b730491f0048c",
        "name": "Only Banks",
        "property": "nameSplit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "[A-Z][0-9][0-9][0-9][0-9]",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 800,
        "wires": [
            [
                "49a8114ef74c12d6"
            ]
        ]
    },
    {
        "id": "a01ab7214f195dd2",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Split by /",
        "func": "var i = msg.nameSplit.split(\"/\")\nfor (const banks of i) {\n    msg.bankSplit = banks\n    node.send(msg)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 920,
        "wires": [
            [
                "5a316c94d70633fa"
            ]
        ]
    },
    {
        "id": "5a316c94d70633fa",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "ReSplit per Layout",
        "func": "var i = msg.bankSplit\nif (i.split(\",\")[1]) {\n    msg.bankNumber = i.split(\",\")[0].substring(0, 3)\n    var dualSplit = i.split(\",\")\n    for (const c of dualSplit) {\n        msg.currentSplit = c\n        if (c.split(\"-\")[1]) {\n            msg.sequenceSplit = c\n            node.send([, msg,])   //Not Multiple Banks\n        }\n        else {\n            node.send([, , msg])   //Banks Split\n        }\n    }\n}\nelse if (i.split(\"-\")[1] && (!i.split(\",\")[1])) {\n    msg.bankNumber = i.split(\"-\")[0].substring(0, 3)\n    msg.sequenceSplit = i\n    node.send([, msg, ])   //Not Multiple Banks\n}\nelse {\n    msg.nameSplit = msg.bankSplit\n    node.send([msg, , ])   //Single Machines\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1000,
        "wires": [
            [
                "a16cee65040ea272"
            ],
            [
                "ef1a19412efc9a92"
            ],
            [
                "3d99e1a0c7cf0634"
            ]
        ]
    },
    {
        "id": "a16cee65040ea272",
        "type": "switch",
        "z": "0b0b730491f0048c",
        "name": "Only Banks",
        "property": "bankSplit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "[A-Z][0-9][0-9][0-9][0-9]",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 960,
        "wires": [
            [
                "5461f6e83767e416"
            ]
        ]
    },
    {
        "id": "49a8114ef74c12d6",
        "type": "link out",
        "z": "0b0b730491f0048c",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "e022b96d52be3515"
        ],
        "x": 625,
        "y": 800,
        "wires": []
    },
    {
        "id": "5461f6e83767e416",
        "type": "link out",
        "z": "0b0b730491f0048c",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "e022b96d52be3515"
        ],
        "x": 625,
        "y": 960,
        "wires": []
    },
    {
        "id": "e022b96d52be3515",
        "type": "link in",
        "z": "0b0b730491f0048c",
        "name": "link in 1",
        "links": [
            "49a8114ef74c12d6",
            "5461f6e83767e416"
        ],
        "x": 75,
        "y": 1060,
        "wires": [
            [
                "affc1e306f60794d"
            ]
        ]
    },
    {
        "id": "c279f0a9f23b6376",
        "type": "link in",
        "z": "0b0b730491f0048c",
        "name": "link in 2",
        "links": [
            "5e86e2ee408a50d5",
            "3d99e1a0c7cf0634",
            "24b6d29ec1fbb504"
        ],
        "x": 75,
        "y": 1100,
        "wires": [
            [
                "8e801dda57bdf3d4"
            ]
        ]
    },
    {
        "id": "3a959ca711a17f70",
        "type": "link in",
        "z": "0b0b730491f0048c",
        "name": "link in 3",
        "links": [
            "ef1a19412efc9a92",
            "70f8b5561b0944be"
        ],
        "x": 75,
        "y": 1140,
        "wires": [
            [
                "8ca5882aa71af9cf"
            ]
        ]
    },
    {
        "id": "89274b7f8239f30c",
        "type": "catch",
        "z": "0b0b730491f0048c",
        "name": "",
        "scope": [
            "5a316c94d70633fa"
        ],
        "uncaught": false,
        "x": 90,
        "y": 140,
        "wires": [
            [
                "c6b022ac0ac4998f"
            ]
        ]
    },
    {
        "id": "affc1e306f60794d",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Load Single Machine",
        "func": "var machine = msg.nameSplit\nglobal.set(`machines.${machine}`, msg.payload);\nmsg.payload = 1\nnode.send(msg)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1060,
        "wires": [
            [
                "b1b4135aba266275"
            ]
        ]
    },
    {
        "id": "8e801dda57bdf3d4",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Load Split Machines",
        "func": "if (msg.currentSplit.length < 5) {\n    global.set(`machines.${msg.bankNumber + msg.currentSplit}`, msg.payload);\n}\nelse if (msg.currentSplit.length = 5) {\n    global.set(`machines.${msg.currentSplit}`, msg.payload);\n}\n\nmsg.payload = 1\nnode.send(msg)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1100,
        "wires": [
            [
                "b1b4135aba266275"
            ]
        ]
    },
    {
        "id": "8ca5882aa71af9cf",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Load Sequential Banks",
        "func": "var i = msg.sequenceSplit.split(\"-\")\nif (i[0].length != 5){\n    i[0] = msg.bankNumber + msg.sequenceSplit.split(\"-\")[0]\n}\nfor (const machine of i) {\n    if (machine.length != 5) {\n        var trailing = machine\n    } else {\n        var leading = machine.substring(3, 5)\n    }\n}\nif (Number(trailing) < Number(leading)) {\n    var begin = trailing\n    var end = leading\n} else {\n    var begin = leading\n    var end = trailing\n}\nfor (var i = begin; i <= end; i++) {\n    if (i.toString().length < 2) {\n        msg.currentIteration = msg.bankNumber + \"0\" + i.toString()\n    }\n    else {\n        msg.currentIteration = msg.bankNumber + i.toString()\n    }\n    global.set(`machines.${msg.currentIteration}`, msg.payload);\n}\n\nmsg.payload = 1\nnode.send(msg)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1140,
        "wires": [
            [
                "b1b4135aba266275"
            ]
        ]
    },
    {
        "id": "fee921411bf12e85",
        "type": "catch",
        "z": "0b0b730491f0048c",
        "name": "",
        "scope": [
            "41259726c6c59c47",
            "5a316c94d70633fa",
            "affc1e306f60794d",
            "8e801dda57bdf3d4",
            "8ca5882aa71af9cf",
            "bf99638295ddbd15",
            "898988791b45809e"
        ],
        "uncaught": false,
        "x": 90,
        "y": 180,
        "wires": [
            [
                "281245407343a0e2"
            ]
        ]
    },
    {
        "id": "5e86e2ee408a50d5",
        "type": "link out",
        "z": "0b0b730491f0048c",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "c279f0a9f23b6376"
        ],
        "x": 625,
        "y": 880,
        "wires": []
    },
    {
        "id": "70f8b5561b0944be",
        "type": "link out",
        "z": "0b0b730491f0048c",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "3a959ca711a17f70"
        ],
        "x": 625,
        "y": 840,
        "wires": []
    },
    {
        "id": "3d99e1a0c7cf0634",
        "type": "link out",
        "z": "0b0b730491f0048c",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "c279f0a9f23b6376"
        ],
        "x": 625,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ef1a19412efc9a92",
        "type": "link out",
        "z": "0b0b730491f0048c",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "3a959ca711a17f70"
        ],
        "x": 625,
        "y": 1000,
        "wires": []
    },
    {
        "id": "60ba7c6d0039e2e0",
        "type": "debug",
        "z": "0b0b730491f0048c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 20,
        "wires": []
    },
    {
        "id": "3bd6d6355ac25446",
        "type": "debug",
        "z": "0b0b730491f0048c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 60,
        "wires": []
    },
    {
        "id": "64afe5bf6e553e14",
        "type": "debug",
        "z": "0b0b730491f0048c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "c6b022ac0ac4998f",
        "type": "debug",
        "z": "0b0b730491f0048c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 140,
        "wires": []
    },
    {
        "id": "281245407343a0e2",
        "type": "debug",
        "z": "0b0b730491f0048c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 180,
        "wires": []
    },
    {
        "id": "8d1e1c13.ddbbb",
        "type": "json",
        "z": "0b0b730491f0048c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 590,
        "y": 520,
        "wires": [
            [
                "998ff401.74499"
            ]
        ]
    },
    {
        "id": "998ff401.74499",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "",
        "func": "for (const iterator of msg.payload.monitors) {\n    if (iterator.name === \"Slots Online\") {\n        global.set(`monitor`, iterator);\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "17964a9820b3bbef",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Monitors Pull",
        "func": "var i = global.get(`cathexisServer`)\nmsg.digestUser = i.serverUserDigest\nmsg.digestPass = i.serverPassDigest\nmsg.method = \"GET\"\nmsg.url = i.ip + \":33104/videowall/list\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 520,
        "wires": [
            [
                "29f0c87a9bba4577"
            ]
        ]
    },
    {
        "id": "29f0c87a9bba4577",
        "type": "http request",
        "z": "0b0b730491f0048c",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": true,
        "headers": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "8d1e1c13.ddbbb"
            ]
        ]
    },
    {
        "id": "b1286e30932ab733",
        "type": "status",
        "z": "0b0b730491f0048c",
        "name": "",
        "scope": [
            "affc1e306f60794d",
            "8e801dda57bdf3d4",
            "8ca5882aa71af9cf",
            "4d5d14e247df4011"
        ],
        "x": 100,
        "y": 220,
        "wires": [
            [
                "91191e337d81c662"
            ]
        ]
    },
    {
        "id": "be3b5d3c1a7c8206",
        "type": "ui_text",
        "z": "0b0b730491f0048c",
        "group": "a4cb1f92e296ec88",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Address",
        "format": "{{msg.payload.ip}}",
        "layout": "row-spread",
        "className": "",
        "x": 460,
        "y": 300,
        "wires": []
    },
    {
        "id": "7691939312d7fae0",
        "type": "ui_text",
        "z": "0b0b730491f0048c",
        "group": "a4cb1f92e296ec88",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Username",
        "format": "{{msg.payload.serverUserDigest}}",
        "layout": "row-spread",
        "className": "",
        "x": 470,
        "y": 340,
        "wires": []
    },
    {
        "id": "653de7f5e2e813b5",
        "type": "ui_text",
        "z": "0b0b730491f0048c",
        "group": "a4cb1f92e296ec88",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Password",
        "format": "{{msg.payload.serverPassDigest}}",
        "layout": "row-spread",
        "className": "",
        "x": 460,
        "y": 380,
        "wires": []
    },
    {
        "id": "dc02f0ded5d87106",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "load Cathexis",
        "func": "msg.payload = global.get('cathexisServer');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 340,
        "wires": [
            [
                "653de7f5e2e813b5",
                "7691939312d7fae0",
                "be3b5d3c1a7c8206"
            ]
        ]
    },
    {
        "id": "2af6579627527a02",
        "type": "ui_form",
        "z": "0b0b730491f0048c",
        "name": "",
        "label": "Server Configuration",
        "group": "a4cb1f92e296ec88",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Address",
                "value": "ip",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Username",
                "value": "serverUserDigest",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "serverPassDigest",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ip": "",
            "serverUserDigest": "",
            "serverPassDigest": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "bcab85064e65b5ca"
            ]
        ]
    },
    {
        "id": "46c0a62804f17e2e",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "function 8",
        "func": "global.set(\"cathexisServer\", msg.payload);\nmsg.path = \"/root/.cathexisServer\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 260,
        "wires": [
            [
                "a9d69378926551e6",
                "eb41ab0c951cea70"
            ]
        ]
    },
    {
        "id": "4ac7a2c6517e330b",
        "type": "link in",
        "z": "0b0b730491f0048c",
        "name": "link in 5",
        "links": [
            "2b1fd5f0a3d625e5"
        ],
        "x": 135,
        "y": 340,
        "wires": [
            [
                "dc02f0ded5d87106"
            ]
        ]
    },
    {
        "id": "a9d69378926551e6",
        "type": "link out",
        "z": "0b0b730491f0048c",
        "name": "Cathexis Server Change",
        "mode": "link",
        "links": [
            "855ac5545bfd7400"
        ],
        "x": 625,
        "y": 260,
        "wires": []
    },
    {
        "id": "bf99638295ddbd15",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "test lower Load",
        "func": "let machines = Object.entries(global.get(`machines`))\nvar i = {}\nvar b = {}\nvar defaultJSON = { type: 6, make: \"Bosch\", digestUser: \"service\", digestPass: \"Admin123!\" }\nmsg.method = \"GET\"\nfor (const iterator of machines) {\n    global.get(`cameras.${iterator[1].user_assigned_id}`) ? b = global.get(`cameras.${iterator[1].user_assigned_id}`) : b = defaultJSON\n    i = {\n        no: iterator[1].user_assigned_id,\n        ip: iterator[1].ip,\n        type: b.type,\n        make: b.make,\n        digestUser: b.digestUser,\n        digestPass: b.digestPass,\n        online: iterator[1].online\n    }\n    flow.set(`cameras.${iterator[1].user_assigned_id}`, i)\n}\nlet cameras = Object.entries(flow.get(`cameras`))\nfor (const cameraIterator of cameras) {\n    if (cameraIterator[1].online !== \"0\") {\n        msg.digestUser = cameraIterator[1].digestUser\n        msg.digesrPass = cameraIterator[1].digestPass\n        msg.cameraIp = cameraIterator[1].no\n        node.send([{\n            retain: {\n                command: \"addRow\",\n                arguments: [\n                    [\n                        {\n                            \"no\": cameraIterator[1].no,\n                            \"ip\": cameraIterator[1].ip,\n                            \"type\": cameraIterator[1].type,\n                            \"make\": cameraIterator[1].make,\n                            \"digestUser\": cameraIterator[1].digestUser,\n                            \"digestPass\": cameraIterator[1].digestPass\n                        }\n                    ],\n                    false\n                ],\n                returnPromise: true\n            }, url: `http://` + cameraIterator[1].ip + `/rcp.xml?command=0x0bb3&type=P_OCTET&direction=READ&num=1&idstring=osdProperties&rnd=` + Date.now(),\n            \"no\": cameraIterator[1].no,\n            \"ip\": cameraIterator[1].ip,\n            \"type\": cameraIterator[1].type,\n            \"make\": cameraIterator[1].make,\n            \"digestUser\": cameraIterator[1].digestUser,\n            \"digestPass\": cameraIterator[1].digestPass,\n            \"method\": \"GET\"\n        },\n        { url: `http://` + cameraIterator[1].ip + `/rcp.xml?command=0x0bb3&type=P_OCTET&direction=READ&num=1&idstring=osdProperties&rnd=` + Date.now() }])\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1200,
        "wires": [
            [
                "f6aa303e7156f058",
                "4d5d14e247df4011"
            ]
        ],
        "info": "# addRow([row],onTop)\n\n`onTop=false`\n\nadds a new Row on top of the table"
    },
    {
        "id": "898988791b45809e",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "add Cameras updates from Cathexis",
        "func": "var i = global.get(`cameras.${msg.no}`);\nglobal.set(`cameras.${msg.no}`, {\n    no: msg.no,\n    ip: msg.ip,\n    type: Number(msg.payload.rcp.result[0].str[0].split(\" \")[3][1]),\n    make: \"Bosch\",\n    digestUser: \"service\",\n    digestPass: \"Admin123!\"\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "78f3fb01dffb3339",
        "type": "http request",
        "z": "0b0b730491f0048c",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": true,
        "headers": [],
        "x": 630,
        "y": 1200,
        "wires": [
            [
                "a2da41d01022ab52"
            ]
        ]
    },
    {
        "id": "a2da41d01022ab52",
        "type": "xml",
        "z": "0b0b730491f0048c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 770,
        "y": 1200,
        "wires": [
            [
                "898988791b45809e"
            ]
        ]
    },
    {
        "id": "ee85b30a09cbcf62",
        "type": "trigger",
        "z": "0b0b730491f0048c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "250",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 540,
        "y": 1100,
        "wires": [
            [
                "bf99638295ddbd15"
            ]
        ]
    },
    {
        "id": "4d5d14e247df4011",
        "type": "delay",
        "z": "0b0b730491f0048c",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "seconds",
        "rate": "4",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "78f3fb01dffb3339"
            ]
        ]
    },
    {
        "id": "eb41ab0c951cea70",
        "type": "file",
        "z": "0b0b730491f0048c",
        "name": "",
        "filename": "path",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 680,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "03cf09576400a3f3",
        "type": "file in",
        "z": "0b0b730491f0048c",
        "name": "",
        "filename": "path",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "6d1e525139dd5580"
            ]
        ]
    },
    {
        "id": "48c0aa7dfb677b18",
        "type": "file",
        "z": "0b0b730491f0048c",
        "name": "",
        "filename": "path",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 440,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "92ef45596e0a6efd",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "function 16",
        "func": "global.set(`cameras`,msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 420,
        "wires": [
            [
                "566b83cde3ac14b0"
            ]
        ]
    },
    {
        "id": "12c510ef9fa02f86",
        "type": "ui_button",
        "z": "0b0b730491f0048c",
        "name": "Read",
        "group": "94d7b14d.94bdc",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Read Config",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "/root/config.json",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "64be0b2ff23ee424"
            ]
        ]
    },
    {
        "id": "4855ac48b043725d",
        "type": "ui_button",
        "z": "0b0b730491f0048c",
        "name": "Save",
        "group": "94d7b14d.94bdc",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save Config",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "/root/config.json",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "0698f6bded992855"
            ]
        ]
    },
    {
        "id": "0698f6bded992855",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Write CFG",
        "func": "msg.path = `/root/config.json`\n// msg.payload = flow.get(`cameras`)\nmsg.payload = global.get(`cameras`)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 480,
        "wires": [
            [
                "48c0aa7dfb677b18"
            ]
        ]
    },
    {
        "id": "764edec74e2a6260",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Read CFG",
        "func": "msg.path = `/root/config.json`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 420,
        "wires": [
            [
                "03cf09576400a3f3"
            ]
        ]
    },
    {
        "id": "6d1e525139dd5580",
        "type": "json",
        "z": "0b0b730491f0048c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "92ef45596e0a6efd"
            ]
        ]
    },
    {
        "id": "566b83cde3ac14b0",
        "type": "link out",
        "z": "0b0b730491f0048c",
        "name": "Read Config Out",
        "mode": "link",
        "links": [
            "0596eef8bc920713"
        ],
        "x": 815,
        "y": 420,
        "wires": []
    },
    {
        "id": "855ac5545bfd7400",
        "type": "link in",
        "z": "0b0b730491f0048c",
        "name": "Slots Config Kickoff",
        "links": [
            "a9d69378926551e6",
            "feeae3a591608c90"
        ],
        "x": 135,
        "y": 440,
        "wires": [
            [
                "64be0b2ff23ee424"
            ]
        ]
    },
    {
        "id": "0596eef8bc920713",
        "type": "link in",
        "z": "0b0b730491f0048c",
        "name": "Read Config In",
        "links": [
            "566b83cde3ac14b0"
        ],
        "x": 135,
        "y": 520,
        "wires": [
            [
                "e9f0384416b4ca52"
            ]
        ]
    },
    {
        "id": "f6aa303e7156f058",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "fill Table",
        "func": "msg.payload = msg.retain\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1320,
        "wires": [
            [
                "63f948264cca74e6"
            ]
        ]
    },
    {
        "id": "63f948264cca74e6",
        "type": "ui_table",
        "z": "0b0b730491f0048c",
        "group": "94d7b14d.94bdc",
        "name": "Configured Cameras",
        "order": 8,
        "width": "16",
        "height": "9",
        "columns": [
            {
                "field": "no",
                "title": "No",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ip",
                "title": "IP",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "make",
                "title": "Make",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "digestUser",
                "title": "Username",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "digestPass",
                "title": "Password",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 460,
        "y": 1320,
        "wires": [
            [
                "025ce6426466df96"
            ]
        ]
    },
    {
        "id": "025ce6426466df96",
        "type": "ui_form",
        "z": "0b0b730491f0048c",
        "d": true,
        "name": "",
        "label": "",
        "group": "94d7b14d.94bdc",
        "order": 9,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Number",
                "value": "no",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "IP Address",
                "value": "ip",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Make",
                "value": "make",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Number of Lines",
                "value": "type",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Username",
                "value": "digestUser",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "digestPass",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "no": "",
            "ip": "",
            "make": "",
            "type": "",
            "digestUser": "",
            "digestPass": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 630,
        "y": 1320,
        "wires": [
            [
                "526c64d7b880a91d"
            ]
        ]
    },
    {
        "id": "526c64d7b880a91d",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Store Results",
        "func": "global.set(`cameras.${msg.payload.no}`,msg.payload)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "91191e337d81c662",
        "type": "ui_text",
        "z": "0b0b730491f0048c",
        "group": "94d7b14d.94bdc",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Load Remaining",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 220,
        "wires": []
    },
    {
        "id": "eba22e6738ddddb3",
        "type": "function",
        "z": "0b0b730491f0048c",
        "name": "Return only Trans",
        "func": "var i = msg.payload.name.split(\" \")\nif (i.includes(\"Trans\")) {\n    msg.payload.shortName = msg.payload.name.substring(5)\n    global.set(`machines.${msg.payload.user_assigned_id}`, msg.payload)\n    node.send(msg)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "d558fd7c7072d0bd",
        "type": "file",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "filename": "/root/.symDump",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 340,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "eadc0a942cee2bdf",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "admin",
        "func": "msg.machine = msg.payload.substring(0, 5).trim()\nmsg.camera = global.get(`machines.${msg.machine}`)\nmsg.message = msg.payload.substring(6).trim().replace(/   /g, \"\").replace(/([^\\x20-z])/g, \"\")\nif (msg.camera){\n    node.send([msg,])\n}\nelse if (!msg.camera){\n    node.send([,msg])\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 240,
        "wires": [
            [
                "9f6746453111a67c"
            ],
            []
        ]
    },
    {
        "id": "71cfaecee727310c",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Bosch http Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": true,
        "headers": [],
        "x": 610,
        "y": 340,
        "wires": [
            [
                "890b59a0e990386c"
            ]
        ]
    },
    {
        "id": "335d8f12c36615d1",
        "type": "delay",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "4",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "71cfaecee727310c"
            ]
        ]
    },
    {
        "id": "b12cfaf4b25d911d",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "Type Set",
        "func": "var i = global.get(`cameras.${msg.camera.user_assigned_id}`)\nvar b = global.get(`cathexisServer`)\nvar f = global.get(`monitor`)\nnode.send({glowbal:b})\nmsg.topic = i.ip\nmsg.type = i.type\nmsg.digestUser = i.digestUser\nmsg.digestPass = i.digestPass\nnode.send([msg, , , ,])\nvar str = msg.message\nvar result = stringDivider(str, 31, \"\\n\");\nvar splitMessage = result.split(\"\\n\");\nvar line1 = splitMessage[0] ? splitMessage[0] : \"\"\nvar line2 = splitMessage[1] ? splitMessage[1] : \"\"\nvar line3 = splitMessage[2] ? splitMessage[2] : \"\"\nvar line4 = splitMessage[3] ? splitMessage[3] : \"\"\nvar line5 = splitMessage[4] ? splitMessage[4] : \"\"\nif (i.make === \"Bosch\") {\n    msg.method = \"GET\"\n    msg.headers = { \"content-type\": 'application/xml' }\n    if (i.type === 4) {\n        var iconvEncoded =\n            iconvLite.encode(msg.machine, 'utf-16be').toString('hex').padEnd(128, \"0\") +\n            iconvLite.encode(line1, 'utf-16be').toString('hex').padEnd(128, \"0\") +\n            iconvLite.encode(line2, 'utf-16be').toString('hex').padEnd(128, \"0\") +\n            iconvLite.encode(line3, 'utf-16be').toString('hex').padEnd(128, \"0\")\n    }\n    else if (i.type === 6) {\n        var iconvEncoded =\n            iconvLite.encode(msg.machine, 'utf-16be').toString('hex').padEnd(128, \"0\") +\n            iconvLite.encode(line1, 'utf-16be').toString('hex').padEnd(128, \"0\") +\n            iconvLite.encode(line2, 'utf-16be').toString('hex').padEnd(128, \"0\") +\n            iconvLite.encode(line3, 'utf-16be').toString('hex').padEnd(128, \"0\") +\n            iconvLite.encode(line4, 'utf-16be').toString('hex').padEnd(128, \"0\") +\n            iconvLite.encode(line5, 'utf-16be').toString('hex').padEnd(128, \"0\")\n    }\n    node.send({ payload: iconvEncoded })\n    msg.url = 'http://' + i.ip +\n        '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' +\n        iconvEncoded +\n        '&rnd=' + Date.now()\n    return [null, msg, null, null, null, null, msg, {\n        url: `http://${global.get(`cathexisServer.ip`)}:33104/videowall/monitor/${global.get('monitor.id')}/setcamerafullscreen/${msg.camera.id}`,\n        digestUser: `${global.get('cathexisServer.serverUserDigest')}`,\n        digestPass: `${global.get('cathexisServer.serverPassDigest')}`,\n        method: \"GET\"\n    }]\n}\nelse if (i.make === \"Hikvision\") {\n    msg.method = \"PUT\"\n    msg.headers = { \"content-type\": 'application/x-www-form-urlencoded; charset=UTF-8' }\n    msg.url = 'http://' + i.ip + '/ISAPI/System/Video/inputs/channels/1/overlays';\n    msg.payload = '<?xml version=\"1.0\" encoding=\"utf-8\"?><VideoOverlay><normalizedScreenSize><normalizedScreenWidth>704</normalizedScreenWidth><normalizedScreenHeight>576</normalizedScreenHeight></normalizedScreenSize><attribute><transparent>false</transparent><flashing>false</flashing></attribute><fontSize>adaptive</fontSize><frontColorMode>auto</frontColorMode><alignment>alignLeft</alignment><TextOverlayList><TextOverlay><id>1</id><enabled>true</enabled><displayText>' +\n        msg.machine + '</displayText><positionX>0</positionX><positionY>160</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>2</id><enabled>true</enabled><displayText>' +\n        msg.message + '</displayText><positionX>0</positionX><positionY>128</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>3</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>96</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>4</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>64</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay></TextOverlayList></VideoOverlay>';\n    return [null, null, msg, null, null]\n}\nelse if (i.make === \"Vivotek\") {\n    msg.method = \"GET\"\n    msg.headers = { \"content-type\": 'application/xml' }\n    msg.url = 'http://' + i.ip + '/cgi-bin/admin/setparam.cgi?videoin_c0_text=' +\n        msg.machine + '&videoin_c0_imprinttimestamp=1&videoin_c0_cmosfreq=60&videoin_c0_flip=0&videoin_c0_mirror=0&videoin_c0_color=1&videoin_c0_textonvideo_position=top&videoin_c0_textonvideo_size=30&videoin_c0_textonvideo_fontpath=/usr/share/font/Default.ttf&videoin_c0_rotate=0'\n    return [null, null, null, msg, null]\n}\nelse if (i.make === \"Dahua\") {\n    msg.method = \"POST\"\n    msg.url = 'http://' + i.ip + '/cgi-bin/configManager.cgi?action=setConfig&VideoWidget[0].CustomTitle[1].Text=' +\n        msg.machine + '|' + msg.message + '|' + \" \" + '|' + \" \" + '|' + \" \"\n    return [null, null, null, null, msg];\n}\nelse if (i.make === \"Univu\") {\n    msg.method = \"PUT\"\n    msg.headers = { \"content-type\": 'application/json;charset=UTF-8' }\n    msg.url = `http://${i.ip}/LAPI/V1.0/Channel/0/Media/OSD/0`;\n    msg.payload = '{\"AreaNum\":8,\"InfoOSD\":[{\"Index\":0,\"Enable\":1,\"InfoParam\":[{\"InfoType\":\"1\",\"Value\":\"\",\"Enable\":\"1\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":33,\"Y\":41},\"BotRight\":{\"X\":12,\"Y\":13}}},{\"Index\":1,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":75,\"Y\":3},\"BotRight\":{\"X\":85,\"Y\":13}}},{\"Index\":2,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":2,\"Y\":75},\"BotRight\":{\"X\":12,\"Y\":85}}},{\"Index\":3,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":4,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":5,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":6,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}},{\"Index\":7,\"Enable\":0,\"InfoParam\":[{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"},{\"InfoType\":0,\"Value\":\"\"}],\"Area\":{\"TopLeft\":{\"X\":0,\"Y\":0},\"BotRight\":{\"X\":10,\"Y\":10}}}]}'\n    return [null, null, null, null, null, msg];\n}\nfunction stringDivider(str, width, spaceReplacer) {\n    if (str.length > width) {\n        var p = width\n        for (; p > 0 && str[p] != ' '; p--) {\n        }\n        if (p > 0) {\n            var left = str.substring(0, p);\n            var right = str.substring(p + 1);\n            return left + spaceReplacer + stringDivider(right, width, spaceReplacer);\n        }\n    }\n    return str;\n}",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "iconvLite",
                "module": "iconv-lite"
            }
        ],
        "x": 180,
        "y": 500,
        "wires": [
            [
                "243e49c1ca7c68a8"
            ],
            [
                "335d8f12c36615d1"
            ],
            [
                "f4a50506f9f42fdd"
            ],
            [
                "2a5f73d34bad200d"
            ],
            [
                "b8dab5e5e23d4dbc"
            ],
            [
                "25d9780c480ee0db"
            ],
            [
                "15a1dff6cafa4ed9"
            ],
            [
                "f6bd52ca08cb14de"
            ]
        ]
    },
    {
        "id": "4b7c4d0827ad80c6",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "func": "\nreturn {\"payload\":msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 200,
        "wires": [
            [
                "d558fd7c7072d0bd"
            ]
        ]
    },
    {
        "id": "9f6746453111a67c",
        "type": "link out",
        "z": "d4bc3e2796f33eee",
        "name": "link out 3",
        "links": [
            "c10497cf805fb217"
        ],
        "x": 275,
        "y": 240,
        "wires": []
    },
    {
        "id": "c10497cf805fb217",
        "type": "link in",
        "z": "d4bc3e2796f33eee",
        "name": "link in 2",
        "links": [
            "9f6746453111a67c"
        ],
        "x": 75,
        "y": 500,
        "wires": [
            [
                "b12cfaf4b25d911d"
            ]
        ]
    },
    {
        "id": "d1f8959805c8acfd",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Hikvision http request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 400,
        "wires": [
            [
                "c2bb80dc0e66471a"
            ]
        ]
    },
    {
        "id": "f4a50506f9f42fdd",
        "type": "delay",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "d1f8959805c8acfd"
            ]
        ]
    },
    {
        "id": "4513449910efdd81",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Vivotek http request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 460,
        "wires": [
            [
                "34afd51200e53c20"
            ]
        ]
    },
    {
        "id": "2a5f73d34bad200d",
        "type": "delay",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 430,
        "y": 460,
        "wires": [
            [
                "4513449910efdd81"
            ]
        ]
    },
    {
        "id": "a5e9e151f85e95d7",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Dahua http request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 520,
        "wires": [
            [
                "9a30a350e7b4ef4d"
            ]
        ]
    },
    {
        "id": "b8dab5e5e23d4dbc",
        "type": "delay",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "a5e9e151f85e95d7"
            ]
        ]
    },
    {
        "id": "a95ba3347ab30422",
        "type": "debug",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 280,
        "wires": []
    },
    {
        "id": "243e49c1ca7c68a8",
        "type": "delay",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 280,
        "wires": [
            [
                "a95ba3347ab30422"
            ]
        ]
    },
    {
        "id": "2aa3ebacb0d21c46",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "clear screen",
        "func": "flow.set('buffer')\nmsg.method = \"GET\";\nmsg.headers = {\"content-type\": 'application/xml'};\nif (msg.type === 4){\nmsg.url = 'http://' + msg.topic + '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' + \"0\".padEnd(512, 0) + '&rnd=' + Date.now()\n}\nelse if (msg.type === 6){\n    msg.url = 'http://' + msg.topic + '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' + \"0\".padEnd(768, 0) + '&rnd=' + Date.now()\n}\nmsg.payload = \"\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 340,
        "wires": [
            [
                "aab9d1afc4f60b35"
            ]
        ]
    },
    {
        "id": "0682dad85c1463f4",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "clear screen",
        "func": "var i = global.get(`cameras.${msg.camera.user_assigned_id}`)\nmsg.digestUser = i.digestUser;\nmsg.digestPass = i.digestPass;\nflow.set('buffer')\nif (global.get(\"prod.make\") === \"Hikvision\"){\n    msg.method = \"PUT\"\n    msg.headers = {\"content-type\": 'application/x-www-form-urlencoded; charset=UTF-8'}\n    msg.payload = '<?xml version=\"1.0\" encoding=\"utf-8\"?><VideoOverlay><normalizedScreenSize><normalizedScreenWidth>704</normalizedScreenWidth><normalizedScreenHeight>576</normalizedScreenHeight></normalizedScreenSize><attribute><transparent>false</transparent><flashing>false</flashing></attribute><fontSize>adaptive</fontSize><frontColorMode>auto</frontColorMode><alignment>alignLeft</alignment><TextOverlayList><TextOverlay><id>1</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>128</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>2</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>96</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>3</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>64</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>4</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>32</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay></TextOverlayList></VideoOverlay>';\n    msg.url = 'http://' + i.ip + '/ISAPI/System/Video/inputs/channels/1/overlays';\n}\nelse if (global.get(\"prod.make\") === \"Bosch\"){\n    msg.method = \"GET\";\n    msg.headers = {\"content-type\": 'application/xml'};\n    if (i.lines === 4){\n    msg.url = 'http://' + i.ip + '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' + \"0\".padEnd(512, 0) + '&rnd=' + Date.now()\n    }\n    else if (i.lines === 6){\n        msg.url = 'http://' + i.ip + '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' + \"0\".padEnd(768, 0) + '&rnd=' + Date.now()\n    }\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 400,
        "wires": [
            [
                "883c1eefd240e33b"
            ]
        ]
    },
    {
        "id": "883c1eefd240e33b",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Hikvision http clear",
        "method": "use",
        "ret": "txt",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 1130,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3b772ed8baa31d5b",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "clear screen",
        "func": "var i = global.get('prod');\nmsg.digestUser = i.digestUser;\nmsg.digestPass = i.digestPass;\nflow.set('buffer')\nif (global.get(\"prod.make\") === \"Hikvision\"){\n    msg.method = \"PUT\"\n    msg.headers = {\"content-type\": 'application/x-www-form-urlencoded; charset=UTF-8'}\n    msg.payload = '<?xml version=\"1.0\" encoding=\"utf-8\"?><VideoOverlay><normalizedScreenSize><normalizedScreenWidth>704</normalizedScreenWidth><normalizedScreenHeight>576</normalizedScreenHeight></normalizedScreenSize><attribute><transparent>false</transparent><flashing>false</flashing></attribute><fontSize>adaptive</fontSize><frontColorMode>auto</frontColorMode><alignment>alignLeft</alignment><TextOverlayList><TextOverlay><id>1</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>128</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>2</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>96</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>3</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>64</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay><TextOverlay><id>4</id><enabled>true</enabled><displayText></displayText><positionX>0</positionX><positionY>32</positionY><alignment>1</alignment><minMoveValue>16</minMoveValue></TextOverlay></TextOverlayList></VideoOverlay>';\n    msg.url = 'http://' + i.ip + '/ISAPI/System/Video/inputs/channels/1/overlays';\n}\nelse if (global.get(\"prod.make\") === \"Bosch\"){\n    msg.method = \"GET\";\n    msg.headers = {\"content-type\": 'application/xml'};\n    if (i.lines === 4){\n    msg.url = 'http://' + i.ip + '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' + \"0\".padEnd(512, 0) + '&rnd=' + Date.now()\n    }\n    else if (i.lines === 6){\n        msg.url = 'http://' + i.ip + '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' + \"0\".padEnd(768, 0) + '&rnd=' + Date.now()\n    }\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 460,
        "wires": [
            [
                "b690b63254368aea"
            ]
        ]
    },
    {
        "id": "b690b63254368aea",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Vivotek http clear",
        "method": "use",
        "ret": "txt",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 1110,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "805b7a18e2a93d47",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "clear screen",
        "func": "var i = global.get('prod');\nmsg.digestUser = i.digestUser;\nmsg.digestPass = i.digestPass;\nflow.set('buffer')\nmsg.method = \"POST\"\nmsg.url = 'http://' + i.ip + '/cgi-bin/configManager.cgi?action=setConfig&VideoWidget[0].CustomTitle[1].Text=                      |                      |                      |                      |                      '\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 520,
        "wires": [
            [
                "78d63f9731ae7b8f"
            ]
        ]
    },
    {
        "id": "78d63f9731ae7b8f",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Dahua http clear",
        "method": "use",
        "ret": "txt",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 1100,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "aab9d1afc4f60b35",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Bosch http Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": true,
        "headers": [],
        "x": 1130,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "43718d981333730e",
        "type": "link in",
        "z": "d4bc3e2796f33eee",
        "name": "Data In to Cam",
        "links": [
            "dabe16af1afc4da2"
        ],
        "x": 75,
        "y": 220,
        "wires": [
            [
                "eadc0a942cee2bdf",
                "4b7c4d0827ad80c6"
            ]
        ]
    },
    {
        "id": "07a6bf4f954604e4",
        "type": "comment",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "info": "sudo \nmodprobe g_printer idVendor=0x04b8 idProduct=0x0e02 bcdDevice=\"256\" iManufacturer=\"EPSON\" iProduct=\"TM-T88V\" iSerialNum=\"405139460344080000\" iPNPstring=\"MFG:EPSON;CMD:ESC/POS;MDL:TM-T88V;CLS:PRINTER;DES:EPSON TM-T88V;CID:EpsonTM00000001;\"\nmodprobe g_printer idVendor=0x04b8 idProduct=0x0e02 bcdDevice=\"256\" iManufacturer=\"EPSON\" iProduct=\"TM-T88V\" iSerialNum=\"405139460344080000\" iPNPstring=\"MFG:EPSON;CMD:ESC/POS;MDL:TM-T88V;CLS:PRINTER;DES:EPSON TM-T88V;CID:EpsonTM00000001;\"\n",
        "x": 280,
        "y": 1440,
        "wires": []
    },
    {
        "id": "dabe16af1afc4da2",
        "type": "link out",
        "z": "d4bc3e2796f33eee",
        "name": "Data Out to Cam",
        "mode": "link",
        "links": [
            "43718d981333730e"
        ],
        "x": 475,
        "y": 80,
        "wires": []
    },
    {
        "id": "337ae33ccac62b16",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "3b518360cbf110a4",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Sign In",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"time\": time,\t        \"till_id\":machine,\t        \"cashier_id\":employeeId,\t        \"type\":till\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1500,
        "wires": [
            [
                "337ae33ccac62b16"
            ]
        ]
    },
    {
        "id": "96c65be2013f73dd",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "Micros Cathexis",
        "func": "var s3 = msg.inbound;\nlet eventTypeCheck = msg.eventTypeCheck;\nmsg.eventType = s3[4];\nmsg.eventData = s3[5].substring(0, 21);\nmsg.qty = s3[6];\nmsg.price = s3[7];\nlet miUnit = s3[7]/s3[6];\nmsg.menuItemId = s3[8];\nmsg.uwsNumber = s3[10];\nmsg.employeeId = s3[11];\n//msg.dateTime = s3[12];\n//msg.time = new Date().toISOString().substring(0, 23);\nmsg.checknumber = s3[13];\nmsg.uwsName = s3[14];\nif (eventTypeCheck===\"SIGN_IN\"){\n    msg.cashierId = s3[11];\n    msg.cashierName = s3[5];\n    msg.ttype = \"till\";\n    msg.till = \"open\";\n    return [msg,null,null,null,null,null,null,null,null,null];\n}\nelse if (eventTypeCheck===\"SIGN_OUT\"){\n    msg.cashierId = s3[11];\n    msg.cashierName = s3[5];\n    msg.ttype = \"till\";\n    msg.till = \"closed\";\n    return [null,msg,null,null,null,null,null,null,null,null];\n}\nelse if (eventTypeCheck===\"BEGIN_CHECK\"){\n    msg.cashierName = s3[5];\n    msg.ttype = \"transaction\";\n    msg.trans = \"start\";\n    return [null,null,msg,null,null,null,null,null,null,null];\n}\nelse if (eventTypeCheck===\"MI\"){\n    msg.code = s3[8];\n    msg.itemDescription = s3[5].substring(0, 21);\n    msg.totalValue = s3[7];\n    msg.itemValue = miUnit;\n    msg.ttype = \"transaction\";\n    msg.trans = \"item\";\n    return [null,null,null,msg,null,null,null,null,null,null];\n}\nelse if (eventTypeCheck===\"CLOSE_CHECK\"){\n    msg.cashierName = s3[5];\n    msg.ttype = \"transaction\";\n    msg.trans = \"end\";\n    msg.transData = \"complete\"\n    return [null,null,null,null,msg,null,null,null,null,null];\n}\nelse if (eventTypeCheck===\"TOTAL_DUE\"){\n    msg.cashierName = s3[5];\n    msg.ttype = \"transaction\";\n    msg.trans = \"total\";\n    return [null,null,null,null,null,msg,null,null,null,null];\n}\nelse if (eventTypeCheck===\"TNDR\"){\n    msg.cashierName = s3[5];\n    msg.ttype = \"transaction\";\n    msg.trans = \"tender\";\n    msg.transData = s3[5];\n    return [null,null,null,null,null,null,msg,null,null,null];\n}\nelse if (eventTypeCheck===\"MI_VOID\"){\n    msg.code = s3[8];\n    msg.itemDescription = \"VOID \"+s3[5].substring(0, 18);\n    msg.totalValue = \"-\"+s3[7];\n    msg.itemValue = \"-\"+miUnit;\n    msg.ttype = \"transaction\";\n    msg.trans = \"item\";\n    return [null,null,null,null,null,null,null,msg,null,null];\n}/*\nelse if (eventTypeCheck===\"SYS_AUTH\"){\n    msg.cashierName = s3[5];\n    msg.ttype = \"transaction\";\n    msg.trans = \"end\";\n    msg.transData = \"cancelled\"\n    return [null,null,null,null,null,null,null,msg,null,null];\n}*/\nelse {msg.payload = s3[4]+\" \"+s3[5];\n return [null,null,null,null,null,null,null,null,null,msg];\n}\n",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1660,
        "wires": [
            [
                "3b518360cbf110a4"
            ],
            [
                "f00326f6eac6ded9"
            ],
            [
                "4a60ad97a05c8dda"
            ],
            [
                "41488def16bafddf"
            ],
            [
                "aa7a3bf933409913"
            ],
            [
                "d43095444c1ed2b2"
            ],
            [
                "b39926940a7b0c89"
            ],
            [
                "8b3eedb32b72faf6"
            ],
            [
                "67f8f86b56fa560a"
            ],
            [
                "0b42f95884bc664c"
            ]
        ]
    },
    {
        "id": "3ef915f36c4d3416",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "f00326f6eac6ded9",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Sign Out",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"time\": time,\t        \"till_id\":machine,\t        \"cashier_id\":employeeId,\t        \"type\":till\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1540,
        "wires": [
            [
                "3ef915f36c4d3416"
            ]
        ]
    },
    {
        "id": "c6486d05f309c2a4",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "4a60ad97a05c8dda",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Begin Check",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"transaction_id\":checknumber,\t        \"time\": time,\t        \"type\": trans,\t        \"data\": [\t        {\t            \"cashier_id\": employeeId,\t            \"till_id\": uwsName\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1580,
        "wires": [
            [
                "c6486d05f309c2a4"
            ]
        ]
    },
    {
        "id": "77eae4d32aedaedb",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "41488def16bafddf",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Menu Item",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"transaction_id\":checknumber,\t        \"time\": time,\t        \"type\": trans,\t        \"data\": [\t        {\t            \"code\": menuItemId,\t            \"description\": itemDescription,\t            \"quantity\": qty,\t            \"item_value\": itemValue,\t            \"total_value\": totalValue\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1620,
        "wires": [
            [
                "77eae4d32aedaedb"
            ]
        ]
    },
    {
        "id": "43f536fac74bd78d",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "aa7a3bf933409913",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Close Check",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"transaction_id\":checknumber,\t        \"time\": time,\t        \"type\": trans,\t        \"data\": [\t        {\t            \"type\": transData\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1660,
        "wires": [
            [
                "43f536fac74bd78d"
            ]
        ]
    },
    {
        "id": "492bbd1c1b3217ab",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "d43095444c1ed2b2",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Total Due",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"transaction_id\":checknumber,\t        \"time\": time,\t        \"type\": trans,\t        \"data\": [\t        {\t            \"value\": price\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1700,
        "wires": [
            [
                "492bbd1c1b3217ab"
            ]
        ]
    },
    {
        "id": "758765e6d0384418",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "b39926940a7b0c89",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Tender",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"transaction_id\":checknumber,\t        \"time\": time,\t        \"type\": trans,\t        \"data\": [\t        {\t            \"type\": eventData,\t            \"value\": price,\t            \"change\": \"0\"\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1740,
        "wires": [
            [
                "758765e6d0384418"
            ]
        ]
    },
    {
        "id": "50db3e52906ffcaa",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "8b3eedb32b72faf6",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Menu Item VOID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"transaction_id\":checknumber,\t        \"time\": time,\t        \"type\": trans,\t        \"data\": [\t        {\t            \"code\": menuItemId,\t            \"description\": itemDescription,\t            \"quantity\": qty,\t            \"item_value\": itemValue,\t            \"total_value\": totalValue\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1780,
        "wires": [
            [
                "50db3e52906ffcaa"
            ]
        ]
    },
    {
        "id": "498c8ea92724fa4b",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "67f8f86b56fa560a",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"transaction_id\":checknumber,\t        \"time\": time,\t        \"type\": trans,\t        \"data\": [\t        {\t            \"code\": menuItemId,\t            \"description\": itemDescription,\t            \"quantity\": qty,\t            \"item_value\": itemValue,\t            \"total_value\": totalValue\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1820,
        "wires": [
            [
                "498c8ea92724fa4b"
            ]
        ]
    },
    {
        "id": "0dea08b5c1b3b5e9",
        "type": "xml",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "0b42f95884bc664c",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": ttype,\t        \"data\": [\t        {\t        \"transaction_id\":checknumber,\t        \"time\": time,\t        \"type\": trans,\t        \"data\": [\t        {\t            \"code\": menuItemId,\t            \"description\": itemDescription,\t            \"quantity\": qty,\t            \"item_value\": itemValue,\t            \"total_value\": totalValue\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1860,
        "wires": [
            [
                "0dea08b5c1b3b5e9"
            ]
        ]
    },
    {
        "id": "495d09a5118a8c8c",
        "type": "moment",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "topic": "",
        "input": "time",
        "inputType": "msg",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 320,
        "y": 1560,
        "wires": [
            [
                "96c65be2013f73dd"
            ]
        ]
    },
    {
        "id": "fbfab0c40891a52f",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Item",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": \"transaction\",\t        \"data\": [\t        {\t        \"transaction_id\":till,\t        \"time\": time,\t        \"type\": \"item\",\t        \"data\": [\t        {\t            \"code\": \"1\",\t            \"description\": transaction,\t            \"quantity\": \"0\",\t            \"item_value\": \"0\",\t            \"total_value\": \"0\"\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 680,
        "wires": [
            [
                "37a0ce04ac9254ff",
                "b05f0424541882f6"
            ]
        ]
    },
    {
        "id": "64bf5b6b3709fa5e",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "Close Check",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"request\": [\t       {\t           \"counter\":\"1\",\t           \"time\": time,\t           \"type\": \"transaction\",\t           \"data\": [\t               {\t                   \"transaction_id\":till,\t                   \"time\": time,\t                   \"type\": \"end\",\t                   \"data\": [\t                       {\t                           \"type\": \"complete\"\t        }\t        ]\t        }\t        ]\t    }\t]\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 720,
        "wires": [
            [
                "37a0ce04ac9254ff"
            ]
        ]
    },
    {
        "id": "15a1dff6cafa4ed9",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "function 4",
        "func": "msg.till = msg.machine\nmsg.transaction = msg.message.trim()\nmsg.ip = global.get(`cathexisServer.ip`)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 640,
        "wires": [
            [
                "4d6a145e462d47fe"
            ]
        ]
    },
    {
        "id": "4d6a145e462d47fe",
        "type": "moment",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 600,
        "y": 640,
        "wires": [
            [
                "b6c1723489d67f00"
            ]
        ]
    },
    {
        "id": "b6c1723489d67f00",
        "type": "change",
        "z": "d4bc3e2796f33eee",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"100\",\t        \"time\": time,\t        \"type\": \"transaction\",\t        \"data\": [\t        {\t        \"transaction_id\":till,\t        \"time\": time,\t        \"type\": \"start\",\t        \"data\": [\t        {\t            \"cashier_id\": \"TDN-GSI\",\t            \"till_id\": till\t        }\t        ]\t        }\t        ]\t    }\t]\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 640,
        "wires": [
            [
                "37a0ce04ac9254ff",
                "80f79a5690458dfa"
            ]
        ]
    },
    {
        "id": "a4c7fc6cb4c49ada",
        "type": "serial in",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "serial": "f041467d7ecf6c66",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "768034eb44b36280",
                "037229fceab1aafb"
            ]
        ]
    },
    {
        "id": "768034eb44b36280",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "function 13",
        "func": "msg.payload = msg.payload.substring(22).trim()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 80,
        "wires": [
            [
                "dabe16af1afc4da2"
            ]
        ]
    },
    {
        "id": "7b97869f320b59d2",
        "type": "catch",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 40,
        "wires": [
            [
                "c4434ee8fea7a9e1"
            ]
        ]
    },
    {
        "id": "c4434ee8fea7a9e1",
        "type": "debug",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 40,
        "wires": []
    },
    {
        "id": "ab08ce0336dbde45",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "c8afd62ee8ea32d1",
        "type": "link out",
        "z": "d4bc3e2796f33eee",
        "name": "UPD Transaction Out",
        "mode": "link",
        "links": [
            "f60e0d47661b7775"
        ],
        "x": 1095,
        "y": 640,
        "wires": []
    },
    {
        "id": "80f79a5690458dfa",
        "type": "moment",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 660,
        "y": 680,
        "wires": [
            [
                "fbfab0c40891a52f"
            ]
        ]
    },
    {
        "id": "b05f0424541882f6",
        "type": "moment",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 740,
        "y": 720,
        "wires": [
            [
                "64bf5b6b3709fa5e"
            ]
        ]
    },
    {
        "id": "b9b842a83c7d4904",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Univu http request",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 580,
        "wires": [
            [
                "2bd9503a7f6a1ea0"
            ]
        ]
    },
    {
        "id": "19e2de47840d8c65",
        "type": "function",
        "z": "d4bc3e2796f33eee",
        "name": "clear screen",
        "func": "flow.set('buffer')\nmsg.method = \"GET\";\nmsg.headers = {\"content-type\": 'application/xml'};\nif (msg.type === 4){\nmsg.url = 'http://' + msg.topic + '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' + \"0\".padEnd(512, 0) + '&rnd=' + Date.now()\n}\nelse if (msg.type === 6){\n    msg.url = 'http://' + msg.topic + '/rcp.xml?command=0x0bb1&type=P_UNICODE&direction=WRITE&num=1&idstring=lines&payload=0x' + \"0\".padEnd(768, 0) + '&rnd=' + Date.now()\n}\nmsg.payload = \"\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 580,
        "wires": [
            [
                "dc1c66d1a063f6a1"
            ]
        ]
    },
    {
        "id": "dc1c66d1a063f6a1",
        "type": "http request",
        "z": "d4bc3e2796f33eee",
        "name": "Univu http clear",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": true,
        "headers": [],
        "x": 1100,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "25d9780c480ee0db",
        "type": "delay",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 430,
        "y": 580,
        "wires": [
            [
                "b9b842a83c7d4904"
            ]
        ]
    },
    {
        "id": "890b59a0e990386c",
        "type": "delay-topic-message",
        "z": "d4bc3e2796f33eee",
        "delay": "20",
        "x": 800,
        "y": 340,
        "wires": [
            [
                "2aa3ebacb0d21c46"
            ]
        ]
    },
    {
        "id": "c2bb80dc0e66471a",
        "type": "delay-topic-message",
        "z": "d4bc3e2796f33eee",
        "delay": "20",
        "x": 800,
        "y": 400,
        "wires": [
            [
                "0682dad85c1463f4"
            ]
        ]
    },
    {
        "id": "34afd51200e53c20",
        "type": "delay-topic-message",
        "z": "d4bc3e2796f33eee",
        "delay": "20",
        "x": 780,
        "y": 460,
        "wires": [
            [
                "3b772ed8baa31d5b"
            ]
        ]
    },
    {
        "id": "9a30a350e7b4ef4d",
        "type": "delay-topic-message",
        "z": "d4bc3e2796f33eee",
        "delay": "20",
        "x": 780,
        "y": 520,
        "wires": [
            [
                "805b7a18e2a93d47"
            ]
        ]
    },
    {
        "id": "2bd9503a7f6a1ea0",
        "type": "delay-topic-message",
        "z": "d4bc3e2796f33eee",
        "delay": "20",
        "x": 780,
        "y": 580,
        "wires": [
            [
                "19e2de47840d8c65"
            ]
        ]
    },
    {
        "id": "037229fceab1aafb",
        "type": "ui_text",
        "z": "d4bc3e2796f33eee",
        "group": "94d7b14d.94bdc",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Last Message Recieved",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 350,
        "y": 120,
        "wires": []
    },
    {
        "id": "f6bd52ca08cb14de",
        "type": "rbe",
        "z": "d4bc3e2796f33eee",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "url",
        "topi": "topic",
        "x": 410,
        "y": 780,
        "wires": [
            [
                "ab08ce0336dbde45"
            ]
        ]
    },
    {
        "id": "4902d0526a67abc7",
        "type": "change",
        "z": "f88f7ae578b4cf10",
        "name": "complete",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"request\": [\t       {\t           \"counter\":\"1\",\t           \"time\": time,\t           \"type\": \"transaction\",\t           \"data\": [\t               {\t                   \"transaction_id\":port,\t                   \"time\": time,\t                   \"type\": \"end\",\t                   \"data\": [\t                       {\t                           \"type\": \"complete\"\t        }\t        ]\t        }\t        ]\t    }\t]\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 200,
        "wires": [
            [
                "4ae6a255c2263b1d"
            ]
        ]
    },
    {
        "id": "4f2b5e1ddbdab795",
        "type": "moment",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "e8358f19978cb37a"
            ]
        ]
    },
    {
        "id": "e8358f19978cb37a",
        "type": "change",
        "z": "f88f7ae578b4cf10",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"100\",\t        \"time\": time,\t        \"type\": \"transaction\",\t        \"data\": [\t        {\t        \"transaction_id\":port,\t        \"time\": time,\t        \"type\": \"start\",\t        \"data\": [\t        {\t            \"cashier_id\": teller,\t            \"till_id\": till\t        }\t        ]\t        }\t        ]\t    }\t]\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "119d7b9f799ce052",
        "type": "moment",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "4902d0526a67abc7"
            ]
        ]
    },
    {
        "id": "e1d1b8d6847a9dfe",
        "type": "moment",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 120,
        "wires": [
            [
                "1376cf60d08a0b02"
            ]
        ]
    },
    {
        "id": "1376cf60d08a0b02",
        "type": "change",
        "z": "f88f7ae578b4cf10",
        "name": "Item",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"request\": [\t       {\t           \"counter\":\"1\",\t           \"time\": time,\t           \"type\": \"transaction\",\t           \"data\": [\t               {\t                   \"transaction_id\":port,\t                   \"time\": time,\t                   \"type\": \"item\",\t                   \"data\": [\t                       {\t                           \"code\": item_value,\t                           \"description\": item_value,\t                           \"quantity\": quantity,\t                           \"item_value\": item_value,\t                           \"total_value\": total_value\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "4ae6a255c2263b1d"
            ]
        ]
    },
    {
        "id": "8ad3447e5ed320c1",
        "type": "change",
        "z": "f88f7ae578b4cf10",
        "name": "Total Due",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": \"transaction\",\t        \"data\": [\t        {\t        \"transaction_id\":port,\t        \"time\": time,\t        \"type\": \"total\",\t        \"data\": [\t        {\t            \"value\": total\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "119d7b9f799ce052",
                "4ae6a255c2263b1d"
            ]
        ]
    },
    {
        "id": "2a32be20b9d8a920",
        "type": "moment",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "8ad3447e5ed320c1"
            ]
        ]
    },
    {
        "id": "4335306f3e89baba",
        "type": "catch",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 40,
        "wires": [
            [
                "7760e4b1701386e8"
            ]
        ]
    },
    {
        "id": "7760e4b1701386e8",
        "type": "debug",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "b0ad6e53511b5de3",
        "type": "link in",
        "z": "f88f7ae578b4cf10",
        "name": "Start Tx In",
        "links": [
            "429f952b6213cec5",
            "4317b03ddc50aed3",
            "8751a246221d2596",
            "70a66c785288152e",
            "a71536c3b0bf76fa",
            "17152b637229d7b0",
            "dccf4aeb7d68e9a3",
            "573bb5a094444a6e",
            "0f1d2dc061e3415e",
            "a70d2db854d0c803",
            "dcd58203f02ff687",
            "1d31ef6b6bbc48f5",
            "1c25d0d0ce6b999f",
            "9879f7274c05c47a",
            "e2e79094a0066602",
            "bc1f4d7e292446b0",
            "ed301c7733dbd5f9",
            "c037241508dea1a2",
            "6fded622ef575b3e",
            "e303f269be7264b2",
            "f74a7856766bf047",
            "b726a80787ca11aa",
            "aba80f62946132d5",
            "48f80e0e880d4155",
            "5ce1e8c7049db5aa",
            "720eae219666dcab"
        ],
        "x": 65,
        "y": 80,
        "wires": [
            [
                "4f2b5e1ddbdab795"
            ]
        ]
    },
    {
        "id": "6d558fee70b3e898",
        "type": "link in",
        "z": "f88f7ae578b4cf10",
        "name": "Add Item In",
        "links": [
            "08f97d2e575580a3",
            "c75ec5d1f04201bd",
            "2179761ffda11fc6",
            "7f4b10b3c85b0979",
            "807df83f0e7a533d",
            "f6d16fcd6c1e7d3b",
            "c6f688fc5a257663",
            "bc9f2765a150c891",
            "9455fe58ce2ca6f1",
            "2f4e0c390e54a4f7",
            "36d36db90f955e87",
            "f703f0767938a3f0",
            "e67c7e3d37adfa7f",
            "ba58cd4bd8820ace",
            "888fb2cb14309ae3",
            "dc542671e5c6bf97",
            "60b42ef9e87601c0",
            "83b5b72f6ce4baf2",
            "62c7bd72f9029b78",
            "593a84626246ce72",
            "af9c5caae9e48718",
            "8552782baeb33eb6",
            "9ea69be5468b6990",
            "4904ddb63a4a5049",
            "cd487ba8364b3db6",
            "3a6cf3608d206726"
        ],
        "x": 65,
        "y": 120,
        "wires": [
            [
                "e1d1b8d6847a9dfe"
            ]
        ]
    },
    {
        "id": "742074a5ef3a5bf6",
        "type": "link in",
        "z": "f88f7ae578b4cf10",
        "name": "Total and End Tx In",
        "links": [
            "15aa8f6eb73d763d",
            "371c5682c7c01955",
            "54c4eb0e7eabe5ea",
            "4129ab74ebe67ab3",
            "e2f85ed5d665d275",
            "cb59a4bc5e716e1d",
            "63db3f5fb31b2ea8",
            "3ebffdbd6aaf22a0",
            "dbef88c8173c7027",
            "86afdb0e01127906",
            "f356b68df012095d",
            "5ed1ef79955afdea",
            "ac8366d3fa45416e",
            "48e9af9a231c110e",
            "bd9aab119e10a406",
            "237a031cab9ea11a",
            "d1ebe23e3ba36b5b",
            "9b41b16382f73235",
            "b21999e147c7112d",
            "a79e5927a7dcd926",
            "7647474be855717e",
            "2680f8121c8f1ae7",
            "11e468bde7a9b1b0",
            "1a7b5bf073de279f",
            "053a45cf6f562d53",
            "297596639af89fbd"
        ],
        "x": 65,
        "y": 160,
        "wires": [
            [
                "2a32be20b9d8a920"
            ]
        ]
    },
    {
        "id": "5ce1e8c7049db5aa",
        "type": "link out",
        "z": "f88f7ae578b4cf10",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "b0ad6e53511b5de3"
        ],
        "x": 405,
        "y": 260,
        "wires": []
    },
    {
        "id": "cd487ba8364b3db6",
        "type": "link out",
        "z": "f88f7ae578b4cf10",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "6d558fee70b3e898"
        ],
        "x": 405,
        "y": 300,
        "wires": []
    },
    {
        "id": "053a45cf6f562d53",
        "type": "link out",
        "z": "f88f7ae578b4cf10",
        "name": "Total and End TX Out",
        "mode": "link",
        "links": [
            "742074a5ef3a5bf6"
        ],
        "x": 405,
        "y": 340,
        "wires": []
    },
    {
        "id": "90f987d2a2d32ea1",
        "type": "function",
        "z": "f88f7ae578b4cf10",
        "name": "NEWTON",
        "func": "var message = msg.payload.split(\"~\")\nvar transaction = []\nvar i = message[1].trim().split((' '))[0]\nif (i === \"Denom\") {\n    node.send([{ till: message[0], teller: \"TDN-GSI\", port: message[0] }, ,])\n}\nif (i === \"Total\") {\n    flow.set(`${message[0]}`, 1)\n}\nelse {\n    switch (parseInt(i)) {\n        case 10:\n        case 20:\n        case 50:\n        case 100:\n        case 200:\n            var b = message[1].replace(/\\n/g, \"\").split(\" \")\n            for (const iterator of b) {\n                if (iterator !== \"\") {\n                    transaction.push(iterator)\n                }\n            }\n            msg.port = message[0]\n            msg.item_value = transaction[0],\n            msg.quantity = transaction[1]\n            msg.total_value = transaction[2]\n            node.send([, msg,]);\n            break;\n        default:\n            node.error(\"Data Stripped\", msg);\n            if (flow.get(message[0]) === 1) {\n                var b = message[1].replace(/\\n/g, \"\").split(\" \")\n                for (const iterator of b) {\n                    if (iterator !== \"\") {\n                        transaction.push(iterator)\n                    }\n                }\n                node.send([, , { total: transaction[1], port: message[0] }]);\n                flow.set(`${message[0]}`, 0)\n            }\n    }\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 300,
        "wires": [
            [
                "5ce1e8c7049db5aa"
            ],
            [
                "cd487ba8364b3db6"
            ],
            [
                "053a45cf6f562d53"
            ]
        ]
    },
    {
        "id": "720eae219666dcab",
        "type": "link out",
        "z": "f88f7ae578b4cf10",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "b0ad6e53511b5de3"
        ],
        "x": 855,
        "y": 260,
        "wires": []
    },
    {
        "id": "3a6cf3608d206726",
        "type": "link out",
        "z": "f88f7ae578b4cf10",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "6d558fee70b3e898"
        ],
        "x": 855,
        "y": 300,
        "wires": []
    },
    {
        "id": "297596639af89fbd",
        "type": "link out",
        "z": "f88f7ae578b4cf10",
        "name": "Total and End TX Out",
        "mode": "link",
        "links": [
            "742074a5ef3a5bf6"
        ],
        "x": 855,
        "y": 340,
        "wires": []
    },
    {
        "id": "340c566a1eb8a09c",
        "type": "function",
        "z": "f88f7ae578b4cf10",
        "name": "NEWTON",
        "func": "var message = msg.payload.split(\"~\")\nvar transaction = []\nvar i = message[1].trim().split((' '))[0]\nif (i === \"Denom\") {\n    node.send([{ till: message[0], teller: \"TDN-GSI\", port: message[0] }, ,])\n}\nif (i === \"Total\") {\n    flow.set(`${message[0]}`, 1)\n}\nelse {\n    switch (parseInt(i)) {\n        case 10:\n        case 20:\n        case 50:\n        case 100:\n        case 200:\n            var b = message[1].replace(/\\n/g, \"\").split(\" \")\n            for (const iterator of b) {\n                if (iterator !== \"\") {\n                    transaction.push(iterator)\n                }\n            }\n            msg.port = message[0]\n            msg.item_value = transaction[0],\n            msg.quantity = transaction[1]\n            msg.total_value = transaction[2]\n            node.send([, msg,]);\n            break;\n        default:\n            node.error(\"Data Stripped\", msg);\n            if (flow.get(message[0]) === 1) {\n                var b = message[1].replace(/\\n/g, \"\").split(\" \")\n                for (const iterator of b) {\n                    if (iterator !== \"\") {\n                        transaction.push(iterator)\n                    }\n                }\n                node.send([, , { total: transaction[1], port: message[0] }]);\n                flow.set(`${message[0]}`, 0)\n            }\n    }\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "720eae219666dcab"
            ],
            [
                "3a6cf3608d206726"
            ],
            [
                "297596639af89fbd"
            ]
        ]
    },
    {
        "id": "ffec36d68d438503",
        "type": "tcp in",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8067",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "90f987d2a2d32ea1",
                "029e902fc28d1c68"
            ]
        ]
    },
    {
        "id": "d8f5cfec1bc93a46",
        "type": "tcp in",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8135",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "340c566a1eb8a09c",
                "23181d56a9507a0d"
            ]
        ]
    },
    {
        "id": "11e88e0b7750b164",
        "type": "xml",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 690,
        "y": 140,
        "wires": [
            [
                "56f2a83eee0c63b4"
            ]
        ]
    },
    {
        "id": "56f2a83eee0c63b4",
        "type": "udp out",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "10000",
        "ipv": "udp4",
        "outport": "10010",
        "base64": false,
        "multicast": "false",
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "029e902fc28d1c68",
        "type": "tcp out",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 250,
        "y": 360,
        "wires": []
    },
    {
        "id": "23181d56a9507a0d",
        "type": "tcp out",
        "z": "f88f7ae578b4cf10",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "aa77fb6b2850b79c",
        "type": "catch",
        "z": "903c95189e447cc0",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 40,
        "wires": [
            [
                "ff4f4d772d0718ef"
            ]
        ]
    },
    {
        "id": "ff4f4d772d0718ef",
        "type": "debug",
        "z": "903c95189e447cc0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "ed6fe101f18c80cf",
        "type": "change",
        "z": "903c95189e447cc0",
        "name": "complete",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"request\": [\t       {\t           \"counter\":\"1\",\t           \"time\": time,\t           \"type\": \"transaction\",\t           \"data\": [\t               {\t                   \"transaction_id\":port,\t                   \"time\": time,\t                   \"type\": \"end\",\t                   \"data\": [\t                       {\t                           \"type\": \"complete\"\t        }\t        ]\t        }\t        ]\t    }\t]\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 260,
        "wires": [
            [
                "5b25a16fe0be3c66"
            ]
        ]
    },
    {
        "id": "98847d189d96c779",
        "type": "moment",
        "z": "903c95189e447cc0",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "eeb4700aae3da9ec"
            ]
        ]
    },
    {
        "id": "eeb4700aae3da9ec",
        "type": "change",
        "z": "903c95189e447cc0",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"100\",\t        \"time\": time,\t        \"type\": \"transaction\",\t        \"data\": [\t        {\t        \"transaction_id\":port,\t        \"time\": time,\t        \"type\": \"start\",\t        \"data\": [\t        {\t            \"cashier_id\": teller,\t            \"till_id\": till\t        }\t        ]\t        }\t        ]\t    }\t]\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "5b25a16fe0be3c66"
            ]
        ]
    },
    {
        "id": "5b2092b542d5beef",
        "type": "moment",
        "z": "903c95189e447cc0",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 260,
        "wires": [
            [
                "ed6fe101f18c80cf"
            ]
        ]
    },
    {
        "id": "16d9139807ee34b8",
        "type": "moment",
        "z": "903c95189e447cc0",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 120,
        "wires": [
            [
                "f084f672f82894c6"
            ]
        ]
    },
    {
        "id": "f084f672f82894c6",
        "type": "change",
        "z": "903c95189e447cc0",
        "name": "Item",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"request\": [\t       {\t           \"counter\":\"1\",\t           \"time\": time,\t           \"type\": \"transaction\",\t           \"data\": [\t               {\t                   \"transaction_id\":port,\t                   \"time\": time,\t                   \"type\": \"item\",\t                   \"data\": [\t                       {\t                           \"code\": item_code,\t                           \"description\": item_description,\t                           \"quantity\": item_quantity,\t                           \"item_value\": item_value,\t                           \"total_value\": total_value\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "5b25a16fe0be3c66"
            ]
        ]
    },
    {
        "id": "d6bccc682a7c7c32",
        "type": "change",
        "z": "903c95189e447cc0",
        "name": "Total Due",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": \"transaction\",\t        \"data\": [\t        {\t        \"transaction_id\":port,\t        \"time\": time,\t        \"type\": \"total\",\t        \"data\": [\t        {\t            \"value\": total\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "5b25a16fe0be3c66"
            ]
        ]
    },
    {
        "id": "a62718444353949f",
        "type": "moment",
        "z": "903c95189e447cc0",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "d6bccc682a7c7c32"
            ]
        ]
    },
    {
        "id": "88091168a8156a78",
        "type": "link in",
        "z": "903c95189e447cc0",
        "name": "Start Tx In",
        "links": [
            "dc4a89bd0f040a4c",
            "4317b03ddc50aed3",
            "8751a246221d2596",
            "70a66c785288152e",
            "a71536c3b0bf76fa",
            "17152b637229d7b0",
            "dccf4aeb7d68e9a3",
            "573bb5a094444a6e",
            "0f1d2dc061e3415e",
            "a70d2db854d0c803",
            "dcd58203f02ff687",
            "1d31ef6b6bbc48f5",
            "1c25d0d0ce6b999f",
            "9879f7274c05c47a",
            "e2e79094a0066602",
            "bc1f4d7e292446b0",
            "ed301c7733dbd5f9",
            "b250b61335d4551b",
            "e1b94cfbf6a68343",
            "0cd5d00efac6208b",
            "b9f7cd3b76a2e08e",
            "c1931b5fdcd654f6",
            "cbb04fdb7a2f8006",
            "2ab0616fbeafaa12",
            "88019f198cfa8836",
            "e92d89907c57f7ca",
            "a7356cb20d89f6a4",
            "9e131edf8db5d93a",
            "53ffad7428e4f54c",
            "113528c9328afdb1",
            "19a901cec59f1bd4",
            "2951cb9d5ed8dfe7",
            "e3190daad55bc401"
        ],
        "x": 65,
        "y": 80,
        "wires": [
            [
                "98847d189d96c779"
            ]
        ]
    },
    {
        "id": "f2607e43c84d155a",
        "type": "link in",
        "z": "903c95189e447cc0",
        "name": "Add Item In",
        "links": [
            "8b8c06a52e99bf6c",
            "c75ec5d1f04201bd",
            "2179761ffda11fc6",
            "7f4b10b3c85b0979",
            "807df83f0e7a533d",
            "f6d16fcd6c1e7d3b",
            "c6f688fc5a257663",
            "bc9f2765a150c891",
            "9455fe58ce2ca6f1",
            "2f4e0c390e54a4f7",
            "36d36db90f955e87",
            "f703f0767938a3f0",
            "e67c7e3d37adfa7f",
            "ba58cd4bd8820ace",
            "888fb2cb14309ae3",
            "dc542671e5c6bf97",
            "60b42ef9e87601c0",
            "de20d19f9ed9fcd9",
            "2fd7f4a014b25032",
            "3c28f432a0f96bbf",
            "e9a3a273230b73d9",
            "c5e3df1bedcb4701",
            "28c86916836196c3",
            "192998b05527c250",
            "802a1b78f65467f9",
            "eeb2f64d1734b467",
            "b711ab992291620c",
            "f85ec19e55996631",
            "47a59ab6538cfdd6",
            "b1a2c42589a2d16e",
            "e8c98970dbdc7b69",
            "e6e1d6b84bfe9891",
            "311e31d766d72128"
        ],
        "x": 65,
        "y": 120,
        "wires": [
            [
                "16d9139807ee34b8"
            ]
        ]
    },
    {
        "id": "f8a362d18cc2bc31",
        "type": "link in",
        "z": "903c95189e447cc0",
        "name": "Total Tx In",
        "links": [
            "1c13cd375a74e9c9",
            "852083c8665d9dfe",
            "d748bf48458458a5",
            "6f3b84a4fb5e6aa4",
            "1ff9011ee308bc06",
            "3cad28ff3e2e9813",
            "46ecb1285090718f",
            "75843438f2e2b39c",
            "fd46e6d42dbe7027",
            "126765baf9cffa5a",
            "304d7901436d6269",
            "4d552383bbc9d148",
            "517b33e7ee7c5d12",
            "2454119a5eb2b196",
            "8feddfdddce9ee23",
            "988d6e33e7645e32"
        ],
        "x": 65,
        "y": 160,
        "wires": [
            [
                "a62718444353949f"
            ]
        ]
    },
    {
        "id": "dc4a89bd0f040a4c",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "88091168a8156a78"
        ],
        "x": 395,
        "y": 340,
        "wires": []
    },
    {
        "id": "8b8c06a52e99bf6c",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "f2607e43c84d155a"
        ],
        "x": 395,
        "y": 380,
        "wires": []
    },
    {
        "id": "1c13cd375a74e9c9",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Total TX Out",
        "mode": "link",
        "links": [
            "f8a362d18cc2bc31"
        ],
        "x": 395,
        "y": 420,
        "wires": []
    },
    {
        "id": "61b13631e8554d47",
        "type": "function",
        "z": "903c95189e447cc0",
        "name": "KION",
        "func": "var message = msg.payload.split(\"~\")\nvar id = message[0]\nswitch (message[1].trim().split((' '))[0]) {\n    case \"Tran\":\n        flow.set(`${id}.Transaction_id`, msg.payload.split('              ')[1].replace(/,/g, \"\"))\n        node.send([{\n            till: message[0],\n            teller: \"TDN-GSI\",\n            port: msg.payload.split('              ')[1].replace(/,/g, \"\"),\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, , ,])\n        break;\n    case \"Partial\":\n        flow.set(`${id}.type`, message[1])\n        break;\n    case \"Card\":\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": \"card\",\n            \"item_description\": message[1].split(\" \")[2],\n            \"item_quantity\": 0,\n            \"item_value\": 0,\n            \"total_value\": 0,\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"ZAR\":\n        var denom = message[1].replace(/  /g, \" \").split(' ')\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": denom[1].split('.')[0],\n            \"item_description\": \"R\" + denom[1].split('.')[0] + \" Note\",\n            \"item_quantity\": denom[3],\n            \"item_value\": denom[1].split('.')[0],\n            \"total_value\": denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"Total\":\n        var denom = message[1].split(' ')\n        flow.set(`${id}.total`, denom[denom.length - 1])\n        node.send([, , {\n            port: flow.get(`${id}.Transaction_id`),\n            total: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        },])\n        break;\n    case \"New\":\n        var denom = message[1].split(' ')\n        node.send([, , , {\n            port: flow.get(`${id}.Transaction_id`),\n            type: flow.get(`${id}.type`),\n            value: flow.get(`${id}.total`),\n            change: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }])\n\n        flow.set(`${id}`)\n\n        break;\n    default:\n        node.error(\"Data Stripped\", msg);\n\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 400,
        "wires": [
            [
                "dc4a89bd0f040a4c"
            ],
            [
                "8b8c06a52e99bf6c"
            ],
            [
                "1c13cd375a74e9c9"
            ],
            [
                "826a956ae881bf80"
            ]
        ]
    },
    {
        "id": "826a956ae881bf80",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Change and End Out",
        "mode": "link",
        "links": [
            "43c5d8def65932fe"
        ],
        "x": 395,
        "y": 460,
        "wires": []
    },
    {
        "id": "695baefb210da690",
        "type": "change",
        "z": "903c95189e447cc0",
        "name": "Change",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"request\": [\t        {\t        \"counter\":\"1\",\t        \"time\": time,\t        \"type\": \"transaction\",\t        \"data\": [\t        {\t        \"transaction_id\":port,\t        \"time\": time,\t        \"type\": \"tender\",\t        \"data\": [\t        {\t            \"type\": type,\t            \"value\": value,\t            \"change\": change\t        }\t        ]\t        }\t        ]\t    }\t]\t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 200,
        "wires": [
            [
                "5b25a16fe0be3c66",
                "5b2092b542d5beef"
            ]
        ]
    },
    {
        "id": "67c494ac13ca65a9",
        "type": "moment",
        "z": "903c95189e447cc0",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Africa/Johannesburg",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en_GB",
        "output": "time",
        "outputType": "msg",
        "outTz": "Africa/Johannesburg",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "695baefb210da690"
            ]
        ]
    },
    {
        "id": "43c5d8def65932fe",
        "type": "link in",
        "z": "903c95189e447cc0",
        "name": "Change and End Tx In",
        "links": [
            "826a956ae881bf80",
            "182b3a72f0d7c421",
            "7451924357c36fe5",
            "15d2ec61f7496b6a",
            "2815e79aa23c989c",
            "c5f24cb982c79e88",
            "5490993b1d3f84fb",
            "cbb8c2a9eaa33516",
            "0880274b2a2445a8",
            "f9e11570ca710cf5",
            "a45291b63d975c33",
            "66a802e5407a16af",
            "207dd426a52edadb",
            "ec1fd284923ba517",
            "0496eed795d58197",
            "3b8e04e03f529c60"
        ],
        "x": 65,
        "y": 200,
        "wires": [
            [
                "67c494ac13ca65a9"
            ]
        ]
    },
    {
        "id": "c9c1cfb3c7ec16e5",
        "type": "tcp in",
        "z": "903c95189e447cc0",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8078",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 100,
        "y": 400,
        "wires": [
            [
                "61b13631e8554d47",
                "b0bfdbafb8754944"
            ]
        ]
    },
    {
        "id": "655102224d97cabf",
        "type": "tcp in",
        "z": "903c95189e447cc0",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8079",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 100,
        "y": 580,
        "wires": [
            [
                "a6b86879f717045d",
                "06f7de66f7fdcd7e"
            ]
        ]
    },
    {
        "id": "a3e87420a9b3c4f0",
        "type": "tcp in",
        "z": "903c95189e447cc0",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8080",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 100,
        "y": 760,
        "wires": [
            [
                "686a2d35fcf07768",
                "d45c4187b49e8fb0"
            ]
        ]
    },
    {
        "id": "d82855f67d81460b",
        "type": "tcp in",
        "z": "903c95189e447cc0",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8081",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 100,
        "y": 940,
        "wires": [
            [
                "7889624ada911b7c",
                "f98afa32b04c338f"
            ]
        ]
    },
    {
        "id": "a43822009ff370cb",
        "type": "tcp in",
        "z": "903c95189e447cc0",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8082",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 520,
        "y": 400,
        "wires": [
            [
                "22d3611f71985fca",
                "493fd5d4838bb143"
            ]
        ]
    },
    {
        "id": "6d55aa98fd760ec4",
        "type": "tcp in",
        "z": "903c95189e447cc0",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8083",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 520,
        "y": 580,
        "wires": [
            [
                "467884a206be6872",
                "c23ab5eb982fc7c0"
            ]
        ]
    },
    {
        "id": "1b0d898f19984d24",
        "type": "tcp in",
        "z": "903c95189e447cc0",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8084",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 520,
        "y": 760,
        "wires": [
            [
                "14433c414d3a1ae8",
                "526cc3f44c0c1974"
            ]
        ]
    },
    {
        "id": "e1b94cfbf6a68343",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "88091168a8156a78"
        ],
        "x": 395,
        "y": 520,
        "wires": []
    },
    {
        "id": "2fd7f4a014b25032",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "f2607e43c84d155a"
        ],
        "x": 395,
        "y": 560,
        "wires": []
    },
    {
        "id": "852083c8665d9dfe",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Total TX Out",
        "mode": "link",
        "links": [
            "f8a362d18cc2bc31"
        ],
        "x": 395,
        "y": 600,
        "wires": []
    },
    {
        "id": "182b3a72f0d7c421",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Change and End Out",
        "mode": "link",
        "links": [
            "43c5d8def65932fe"
        ],
        "x": 395,
        "y": 640,
        "wires": []
    },
    {
        "id": "0cd5d00efac6208b",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "88091168a8156a78"
        ],
        "x": 395,
        "y": 700,
        "wires": []
    },
    {
        "id": "3c28f432a0f96bbf",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "f2607e43c84d155a"
        ],
        "x": 395,
        "y": 740,
        "wires": []
    },
    {
        "id": "d748bf48458458a5",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Total TX Out",
        "mode": "link",
        "links": [
            "f8a362d18cc2bc31"
        ],
        "x": 395,
        "y": 780,
        "wires": []
    },
    {
        "id": "7451924357c36fe5",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Change and End Out",
        "mode": "link",
        "links": [
            "43c5d8def65932fe"
        ],
        "x": 395,
        "y": 820,
        "wires": []
    },
    {
        "id": "b9f7cd3b76a2e08e",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "88091168a8156a78"
        ],
        "x": 395,
        "y": 880,
        "wires": []
    },
    {
        "id": "e9a3a273230b73d9",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "f2607e43c84d155a"
        ],
        "x": 395,
        "y": 920,
        "wires": []
    },
    {
        "id": "6f3b84a4fb5e6aa4",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Total TX Out",
        "mode": "link",
        "links": [
            "f8a362d18cc2bc31"
        ],
        "x": 395,
        "y": 960,
        "wires": []
    },
    {
        "id": "15d2ec61f7496b6a",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Change and End Out",
        "mode": "link",
        "links": [
            "43c5d8def65932fe"
        ],
        "x": 395,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c1931b5fdcd654f6",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "88091168a8156a78"
        ],
        "x": 805,
        "y": 340,
        "wires": []
    },
    {
        "id": "c5e3df1bedcb4701",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "f2607e43c84d155a"
        ],
        "x": 805,
        "y": 380,
        "wires": []
    },
    {
        "id": "1ff9011ee308bc06",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Total TX Out",
        "mode": "link",
        "links": [
            "f8a362d18cc2bc31"
        ],
        "x": 805,
        "y": 420,
        "wires": []
    },
    {
        "id": "2815e79aa23c989c",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Change and End Out",
        "mode": "link",
        "links": [
            "43c5d8def65932fe"
        ],
        "x": 805,
        "y": 460,
        "wires": []
    },
    {
        "id": "cbb04fdb7a2f8006",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "88091168a8156a78"
        ],
        "x": 805,
        "y": 520,
        "wires": []
    },
    {
        "id": "28c86916836196c3",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "f2607e43c84d155a"
        ],
        "x": 805,
        "y": 560,
        "wires": []
    },
    {
        "id": "3cad28ff3e2e9813",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Total TX Out",
        "mode": "link",
        "links": [
            "f8a362d18cc2bc31"
        ],
        "x": 805,
        "y": 600,
        "wires": []
    },
    {
        "id": "c5f24cb982c79e88",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Change and End Out",
        "mode": "link",
        "links": [
            "43c5d8def65932fe"
        ],
        "x": 805,
        "y": 640,
        "wires": []
    },
    {
        "id": "2ab0616fbeafaa12",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Start Tx Out",
        "mode": "link",
        "links": [
            "88091168a8156a78"
        ],
        "x": 805,
        "y": 700,
        "wires": []
    },
    {
        "id": "192998b05527c250",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Add Item Out",
        "mode": "link",
        "links": [
            "f2607e43c84d155a"
        ],
        "x": 805,
        "y": 740,
        "wires": []
    },
    {
        "id": "46ecb1285090718f",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Total TX Out",
        "mode": "link",
        "links": [
            "f8a362d18cc2bc31"
        ],
        "x": 805,
        "y": 780,
        "wires": []
    },
    {
        "id": "5490993b1d3f84fb",
        "type": "link out",
        "z": "903c95189e447cc0",
        "name": "Change and End Out",
        "mode": "link",
        "links": [
            "43c5d8def65932fe"
        ],
        "x": 805,
        "y": 820,
        "wires": []
    },
    {
        "id": "a6b86879f717045d",
        "type": "function",
        "z": "903c95189e447cc0",
        "name": "KION",
        "func": "var message = msg.payload.split(\"~\")\nvar id = message[0]\nswitch (message[1].trim().split((' '))[0]) {\n    case \"Tran\":\n        flow.set(`${id}.Transaction_id`, msg.payload.split('              ')[1].replace(/,/g, \"\"))\n        node.send([{\n            till: message[0],\n            teller: \"TDN-GSI\",\n            port: msg.payload.split('              ')[1].replace(/,/g, \"\"),\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, , ,])\n        break;\n    case \"Partial\":\n        flow.set(`${id}.type`, message[1])\n        break;\n    case \"Card\":\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": \"card\",\n            \"item_description\": message[1].split(\" \")[2],\n            \"item_quantity\": 0,\n            \"item_value\": 0,\n            \"total_value\": 0,\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"ZAR\":\n        var denom = message[1].replace(/  /g, \" \").split(' ')\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": denom[1].split('.')[0],\n            \"item_description\": \"R\" + denom[1].split('.')[0] + \" Note\",\n            \"item_quantity\": denom[3],\n            \"item_value\": denom[1].split('.')[0],\n            \"total_value\": denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"Total\":\n        var denom = message[1].split(' ')\n        flow.set(`${id}.total`, denom[denom.length - 1])\n        node.send([, , {\n            port: flow.get(`${id}.Transaction_id`),\n            total: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        },])\n        break;\n    case \"New\":\n        var denom = message[1].split(' ')\n        node.send([, , , {\n            port: flow.get(`${id}.Transaction_id`),\n            type: flow.get(`${id}.type`),\n            value: flow.get(`${id}.total`),\n            change: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }])\n\n        flow.set(`${id}`)\n\n        break;\n    default:\n        node.error(\"Data Stripped\", msg);\n\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 580,
        "wires": [
            [
                "e1b94cfbf6a68343"
            ],
            [
                "2fd7f4a014b25032"
            ],
            [
                "852083c8665d9dfe"
            ],
            [
                "182b3a72f0d7c421"
            ]
        ]
    },
    {
        "id": "686a2d35fcf07768",
        "type": "function",
        "z": "903c95189e447cc0",
        "name": "KION",
        "func": "var message = msg.payload.split(\"~\")\nvar id = message[0]\nswitch (message[1].trim().split((' '))[0]) {\n    case \"Tran\":\n        flow.set(`${id}.Transaction_id`, msg.payload.split('              ')[1].replace(/,/g, \"\"))\n        node.send([{\n            till: message[0],\n            teller: \"TDN-GSI\",\n            port: msg.payload.split('              ')[1].replace(/,/g, \"\"),\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, , ,])\n        break;\n    case \"Partial\":\n        flow.set(`${id}.type`, message[1])\n        break;\n    case \"Card\":\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": \"card\",\n            \"item_description\": message[1].split(\" \")[2],\n            \"item_quantity\": 0,\n            \"item_value\": 0,\n            \"total_value\": 0,\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"ZAR\":\n        var denom = message[1].replace(/  /g, \" \").split(' ')\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": denom[1].split('.')[0],\n            \"item_description\": \"R\" + denom[1].split('.')[0] + \" Note\",\n            \"item_quantity\": denom[3],\n            \"item_value\": denom[1].split('.')[0],\n            \"total_value\": denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"Total\":\n        var denom = message[1].split(' ')\n        flow.set(`${id}.total`, denom[denom.length - 1])\n        node.send([, , {\n            port: flow.get(`${id}.Transaction_id`),\n            total: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        },])\n        break;\n    case \"New\":\n        var denom = message[1].split(' ')\n        node.send([, , , {\n            port: flow.get(`${id}.Transaction_id`),\n            type: flow.get(`${id}.type`),\n            value: flow.get(`${id}.total`),\n            change: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }])\n\n        flow.set(`${id}`)\n\n        break;\n    default:\n        node.error(\"Data Stripped\", msg);\n\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 760,
        "wires": [
            [
                "0cd5d00efac6208b"
            ],
            [
                "3c28f432a0f96bbf"
            ],
            [
                "d748bf48458458a5"
            ],
            [
                "7451924357c36fe5"
            ]
        ]
    },
    {
        "id": "7889624ada911b7c",
        "type": "function",
        "z": "903c95189e447cc0",
        "name": "KION",
        "func": "var message = msg.payload.split(\"~\")\nvar id = message[0]\nswitch (message[1].trim().split((' '))[0]) {\n    case \"Tran\":\n        flow.set(`${id}.Transaction_id`, msg.payload.split('              ')[1].replace(/,/g, \"\"))\n        node.send([{\n            till: message[0],\n            teller: \"TDN-GSI\",\n            port: msg.payload.split('              ')[1].replace(/,/g, \"\"),\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, , ,])\n        break;\n    case \"Partial\":\n        flow.set(`${id}.type`, message[1])\n        break;\n    case \"Card\":\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": \"card\",\n            \"item_description\": message[1].split(\" \")[2],\n            \"item_quantity\": 0,\n            \"item_value\": 0,\n            \"total_value\": 0,\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"ZAR\":\n        var denom = message[1].replace(/  /g, \" \").split(' ')\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": denom[1].split('.')[0],\n            \"item_description\": \"R\" + denom[1].split('.')[0] + \" Note\",\n            \"item_quantity\": denom[3],\n            \"item_value\": denom[1].split('.')[0],\n            \"total_value\": denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"Total\":\n        var denom = message[1].split(' ')\n        flow.set(`${id}.total`, denom[denom.length - 1])\n        node.send([, , {\n            port: flow.get(`${id}.Transaction_id`),\n            total: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        },])\n        break;\n    case \"New\":\n        var denom = message[1].split(' ')\n        node.send([, , , {\n            port: flow.get(`${id}.Transaction_id`),\n            type: flow.get(`${id}.type`),\n            value: flow.get(`${id}.total`),\n            change: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }])\n\n        flow.set(`${id}`)\n\n        break;\n    default:\n        node.error(\"Data Stripped\", msg);\n\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 940,
        "wires": [
            [
                "b9f7cd3b76a2e08e"
            ],
            [
                "e9a3a273230b73d9"
            ],
            [
                "6f3b84a4fb5e6aa4"
            ],
            [
                "15d2ec61f7496b6a"
            ]
        ]
    },
    {
        "id": "14433c414d3a1ae8",
        "type": "function",
        "z": "903c95189e447cc0",
        "name": "KION",
        "func": "var message = msg.payload.split(\"~\")\nvar id = message[0]\nswitch (message[1].trim().split((' '))[0]) {\n    case \"Tran\":\n        flow.set(`${id}.Transaction_id`, msg.payload.split('              ')[1].replace(/,/g, \"\"))\n        node.send([{\n            till: message[0],\n            teller: \"TDN-GSI\",\n            port: msg.payload.split('              ')[1].replace(/,/g, \"\"),\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, , ,])\n        break;\n    case \"Partial\":\n        flow.set(`${id}.type`, message[1])\n        break;\n    case \"Card\":\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": \"card\",\n            \"item_description\": message[1].split(\" \")[2],\n            \"item_quantity\": 0,\n            \"item_value\": 0,\n            \"total_value\": 0,\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"ZAR\":\n        var denom = message[1].replace(/  /g, \" \").split(' ')\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": denom[1].split('.')[0],\n            \"item_description\": \"R\" + denom[1].split('.')[0] + \" Note\",\n            \"item_quantity\": denom[3],\n            \"item_value\": denom[1].split('.')[0],\n            \"total_value\": denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"Total\":\n        var denom = message[1].split(' ')\n        flow.set(`${id}.total`, denom[denom.length - 1])\n        node.send([, , {\n            port: flow.get(`${id}.Transaction_id`),\n            total: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        },])\n        break;\n    case \"New\":\n        var denom = message[1].split(' ')\n        node.send([, , , {\n            port: flow.get(`${id}.Transaction_id`),\n            type: flow.get(`${id}.type`),\n            value: flow.get(`${id}.total`),\n            change: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }])\n\n        flow.set(`${id}`)\n\n        break;\n    default:\n        node.error(\"Data Stripped\", msg);\n\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 760,
        "wires": [
            [
                "2ab0616fbeafaa12"
            ],
            [
                "192998b05527c250"
            ],
            [
                "46ecb1285090718f"
            ],
            [
                "5490993b1d3f84fb"
            ]
        ]
    },
    {
        "id": "467884a206be6872",
        "type": "function",
        "z": "903c95189e447cc0",
        "name": "KION",
        "func": "var message = msg.payload.split(\"~\")\nvar id = message[0]\nswitch (message[1].trim().split((' '))[0]) {\n    case \"Tran\":\n        flow.set(`${id}.Transaction_id`, msg.payload.split('              ')[1].replace(/,/g, \"\"))\n        node.send([{\n            till: message[0],\n            teller: \"TDN-GSI\",\n            port: msg.payload.split('              ')[1].replace(/,/g, \"\"),\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, , ,])\n        break;\n    case \"Partial\":\n        flow.set(`${id}.type`, message[1])\n        break;\n    case \"Card\":\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": \"card\",\n            \"item_description\": message[1].split(\" \")[2],\n            \"item_quantity\": 0,\n            \"item_value\": 0,\n            \"total_value\": 0,\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"ZAR\":\n        var denom = message[1].replace(/  /g, \" \").split(' ')\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": denom[1].split('.')[0],\n            \"item_description\": \"R\" + denom[1].split('.')[0] + \" Note\",\n            \"item_quantity\": denom[3],\n            \"item_value\": denom[1].split('.')[0],\n            \"total_value\": denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"Total\":\n        var denom = message[1].split(' ')\n        flow.set(`${id}.total`, denom[denom.length - 1])\n        node.send([, , {\n            port: flow.get(`${id}.Transaction_id`),\n            total: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        },])\n        break;\n    case \"New\":\n        var denom = message[1].split(' ')\n        node.send([, , , {\n            port: flow.get(`${id}.Transaction_id`),\n            type: flow.get(`${id}.type`),\n            value: flow.get(`${id}.total`),\n            change: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }])\n\n        flow.set(`${id}`)\n\n        break;\n    default:\n        node.error(\"Data Stripped\", msg);\n\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 580,
        "wires": [
            [
                "cbb04fdb7a2f8006"
            ],
            [
                "28c86916836196c3"
            ],
            [
                "3cad28ff3e2e9813"
            ],
            [
                "c5f24cb982c79e88"
            ]
        ]
    },
    {
        "id": "22d3611f71985fca",
        "type": "function",
        "z": "903c95189e447cc0",
        "name": "KION",
        "func": "var message = msg.payload.split(\"~\")\nvar id = message[0]\nswitch (message[1].trim().split((' '))[0]) {\n    case \"Tran\":\n        flow.set(`${id}.Transaction_id`, msg.payload.split('              ')[1].replace(/,/g, \"\"))\n        node.send([{\n            till: message[0],\n            teller: \"TDN-GSI\",\n            port: msg.payload.split('              ')[1].replace(/,/g, \"\"),\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, , ,])\n        break;\n    case \"Partial\":\n        flow.set(`${id}.type`, message[1])\n        break;\n    case \"Card\":\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": \"card\",\n            \"item_description\": message[1].split(\" \")[2],\n            \"item_quantity\": 0,\n            \"item_value\": 0,\n            \"total_value\": 0,\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"ZAR\":\n        var denom = message[1].replace(/  /g, \" \").split(' ')\n        node.send([, {\n            port: flow.get(`${id}.Transaction_id`),\n            \"item_code\": denom[1].split('.')[0],\n            \"item_description\": \"R\" + denom[1].split('.')[0] + \" Note\",\n            \"item_quantity\": denom[3],\n            \"item_value\": denom[1].split('.')[0],\n            \"total_value\": denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }, ,])\n        break;\n    case \"Total\":\n        var denom = message[1].split(' ')\n        flow.set(`${id}.total`, denom[denom.length - 1])\n        node.send([, , {\n            port: flow.get(`${id}.Transaction_id`),\n            total: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        },])\n        break;\n    case \"New\":\n        var denom = message[1].split(' ')\n        node.send([, , , {\n            port: flow.get(`${id}.Transaction_id`),\n            type: flow.get(`${id}.type`),\n            value: flow.get(`${id}.total`),\n            change: denom[denom.length - 1],\n            ip: `${global.get(\"cathexisServer.ip\")}`\n        }])\n\n        flow.set(`${id}`)\n\n        break;\n    default:\n        node.error(\"Data Stripped\", msg);\n\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 400,
        "wires": [
            [
                "c1931b5fdcd654f6"
            ],
            [
                "c5e3df1bedcb4701"
            ],
            [
                "1ff9011ee308bc06"
            ],
            [
                "2815e79aa23c989c"
            ]
        ]
    },
    {
        "id": "c07d4196bbd7db9c",
        "type": "xml",
        "z": "903c95189e447cc0",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 670,
        "y": 180,
        "wires": [
            [
                "5fa5956c04d42ab2"
            ]
        ]
    },
    {
        "id": "5fa5956c04d42ab2",
        "type": "udp out",
        "z": "903c95189e447cc0",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "10000",
        "ipv": "udp4",
        "outport": "10010",
        "base64": false,
        "multicast": "false",
        "x": 850,
        "y": 180,
        "wires": []
    },
    {
        "id": "b0bfdbafb8754944",
        "type": "tcp out",
        "z": "903c95189e447cc0",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 250,
        "y": 460,
        "wires": []
    },
    {
        "id": "06f7de66f7fdcd7e",
        "type": "tcp out",
        "z": "903c95189e447cc0",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 250,
        "y": 640,
        "wires": []
    },
    {
        "id": "d45c4187b49e8fb0",
        "type": "tcp out",
        "z": "903c95189e447cc0",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 250,
        "y": 820,
        "wires": []
    },
    {
        "id": "f98afa32b04c338f",
        "type": "tcp out",
        "z": "903c95189e447cc0",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 250,
        "y": 1000,
        "wires": []
    },
    {
        "id": "493fd5d4838bb143",
        "type": "tcp out",
        "z": "903c95189e447cc0",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 670,
        "y": 460,
        "wires": []
    },
    {
        "id": "c23ab5eb982fc7c0",
        "type": "tcp out",
        "z": "903c95189e447cc0",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 670,
        "y": 640,
        "wires": []
    },
    {
        "id": "526cc3f44c0c1974",
        "type": "tcp out",
        "z": "903c95189e447cc0",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 670,
        "y": 820,
        "wires": []
    }
]